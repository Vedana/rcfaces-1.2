<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE faces-config PUBLIC "-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.1//EN" "http://java.sun.com/dtd/web-facesconfig_1_1.dtd">
<faces-config>
	<component>
		<description><![CDATA[
<p>The accelerator Component is a non-visual component.</p>
      <p>It allows to associate an accelerator key to an action or another component.</p>
      <p>The accelerator Component has the following capabilities :
      <ul>
        <li>Key pressed</li>
        <li>Association to another component</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.accelerator</component-type>
		<component-class>org.rcfaces.core.component.AcceleratorComponent</component-class>
		<attribute>
			<description><![CDATA[
A string specifying a value to select in the component identified in the <b>for</b> property.
]]></description>
			<attribute-name>forItemValue</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the key associated to the component. for example "Alt+F1"
]]></description>
			<attribute-name>keyBinding</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>ignoreEditableComponent</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.additionalInformation</component-type>
		<component-class>org.rcfaces.core.component.AdditionalInformationComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The Box Component is a container.</p>
      <p>It can have a graphical representation or not; But it is mainly used to apply a collective treatment to a set of component, for example show or hide a group of component.</p>
      <p>The Box Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Background Image</li>
      	<li>Border</li>
      	<li>Events Handling</li>
      	<li>Contextual Menu</li>
      	<li>Async Render (AJAX)</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.box</component-type>
		<component-class>org.rcfaces.core.component.BoxComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the horizontal scroll is shown.
]]></description>
			<attribute-name>horizontalScroll</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the vertical scroll is shown.
]]></description>
			<attribute-name>verticalScroll</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The button Component is equivalent to the standard HTML tag &lt;BUTTON&gt;.</p>
      <p>The button Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.button</component-type>
		<component-class>org.rcfaces.core.component.ButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The checkButton Component is equivalent to the &lt;INPUT TYPE="checkbox"&gt; HTML tag.</p>
      <p>The checkButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.checkButton</component-type>
		<component-class>org.rcfaces.core.component.CheckButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The checkButton3States Component is a <a href="/comps/checkButtonComponent.html">CheckButton</a> with 3 states : Check, unchecked and undefined. It is often used to show the state of a group of checkButtons</p>
      <p>This component is <b>experimental</b>.</p>
      <p>The checkButton3States Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.checkButton3States</component-type>
		<component-class>org.rcfaces.core.component.CheckButton3StatesComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The combo Component is equivalent to the standard HTML tag &lt;SELECT SIZE=1&gt;.</p>
      <p>The combo Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.combo</component-type>
		<component-class>org.rcfaces.core.component.ComboComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
A button Component highly customizable through its API.
]]></description>
		<component-type>org.rcfaces.core.customButton</component-type>
		<component-class>org.rcfaces.core.component.CustomButtonComponent</component-class>
	</component>
	<component>
		<component-type>org.rcfaces.core.componentsColumn</component-type>
		<component-class>org.rcfaces.core.component.ComponentsColumnComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
Specify a column.
]]></description>
		<component-type>org.rcfaces.core.dataColumn</component-type>
		<component-class>org.rcfaces.core.component.DataColumnComponent</component-class>
		<attribute>
			<description><![CDATA[
A string value holding the current value of the component.
]]></description>
			<attribute-name>value</attribute-name>
			<attribute-class>java.lang.Object</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.comboColumn</component-type>
		<component-class>org.rcfaces.core.component.ComboColumnComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The pager Component is linked to the <a href="/comps/dataGridComponent.html">dataGrid Component</a>.
      It shows informations about the result set (ex: number of available pages) 
      and can give direct access to a specific page ("a la Google").</p>
      <p>The pager Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.pager</component-type>
		<component-class>org.rcfaces.core.component.PagerComponent</component-class>
		<attribute>
			<description><![CDATA[
A string specifying the message to display when there is no row to display.
]]></description>
			<attribute-name>noPagedMessage</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The dataGrid Component is a grid component. It can be compared to the grid found in the list part of the modern file explorer. It allows sorts, resizing, contextual menus ...</p>
      <p>The dataGrid Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; images</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Contextual actions in cell, row or table scope</li>
      	<li>...</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.dataGrid</component-type>
		<component-class>org.rcfaces.core.component.DataGridComponent</component-class>
		<attribute>
			<description><![CDATA[
An id for the column containing the key for the row.
]]></description>
			<attribute-name>rowValueColumnId</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the name of the variable receiving the number of rows.
]]></description>
			<attribute-name>rowCountVar</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the name of the variable receiving the index of the current row.
]]></description>
			<attribute-name>rowIndexVar</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>cellTextWrap</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
Reserved for future use
]]></description>
		<component-type>org.rcfaces.core.componentsGrid</component-type>
		<component-class>org.rcfaces.core.component.ComponentsGridComponent</component-class>
		<attribute>
			<description><![CDATA[
A string value specifying the name of the variable receiving the number of rows.
]]></description>
			<attribute-name>rowCountVar</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the name of the variable receiving the index of the current row.
]]></description>
			<attribute-name>rowIndexVar</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>rowValue</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>rowValueConverter</attribute-name>
			<attribute-class>javax.faces.convert.Converter</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.comboGrid</component-type>
		<component-class>org.rcfaces.core.component.ComboGridComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
Shows the components for each data with pagination.
]]></description>
		<component-type>org.rcfaces.core.componentsList</component-type>
		<component-class>org.rcfaces.core.component.ComponentsListComponent</component-class>
		<attribute>
			<description><![CDATA[
A string value specifying the name of the variable receiving the number of rows.
]]></description>
			<attribute-name>rowCountVar</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the name of the variable receiving the index of the current row.
]]></description>
			<attribute-name>rowIndexVar</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value holding the width of the component in characters : x characters translates into y pixels width.
]]></description>
			<attribute-name>columnNumber</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when the row is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
			<attribute-name>rowStyleClass</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when this column is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
			<attribute-name>columnStyleClass</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
An item specialized for date values.
]]></description>
		<component-type>org.rcfaces.core.dateItem</component-type>
		<component-class>org.rcfaces.core.component.DateItemComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The calendar Component shows a calendar. It can be customized in differents ways (days off, holidays, tool tips ...).</p>
      <p>The calendar Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Calendar functions</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.calendar</component-type>
		<component-class>org.rcfaces.core.component.CalendarComponent</component-class>
		<attribute>
			<attribute-name>autoSelection</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The dateEntry Component is a specialized <a href="/comps/textEntryComponent.html">textEntry Component</a>. it sports auto-completion related to the validity of the numbers entered as a date.</p>
      <p>The dateEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; separators</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Calendar functions</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.dateEntry</component-type>
		<component-class>org.rcfaces.core.component.DateEntryComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the associated <a href="/comps/dateCHooserComponent.html">dateChooser Component</a> should be automatically opened when the component gets the focus.
]]></description>
			<attribute-name>showCalendarOnFocus</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
			<attribute-name>autoCompletion</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
The date selected by default.
]]></description>
			<attribute-name>defaultDate</attribute-name>
			<attribute-class>java.util.Date</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The dateChooser Component is a button that shows a calendar and help the user to choose a date. It can be associated to a entry field, the choosen date is then automatically entered in the field. It works like an <a href="/comps/imageButtonComponent.html">Image Button Component</a>. The dateChooser Component does <b>not</b> provide an Entry field.</p>
      <p>The dateChooser Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.dateChooser</component-type>
		<component-class>org.rcfaces.core.component.DateChooserComponent</component-class>
		<attribute>
			<description><![CDATA[
A string specifying the format to use for the value that will be send to the component specified in the <b>for</b> property.
]]></description>
			<attribute-name>forValueFormat</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string indicating the date selected when the "home" button is pressed.
		Authorized values are :
		<ul><li>
		today : the current day with time = 00:00
		</li><li>
		now : the current day with the current time for the locale specified for the component
		</li><li>
		yesterday : the previous day with time = 00:00
		</li><li>
		tomorrow : the following day with time = 00:00
		</li><li>
		a date : depending on the locale specified for the component
		</li></ul>
]]></description>
			<attribute-name>homeDate</attribute-name>
			<attribute-class>java.util.Date</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>defaultSelectedDate</attribute-name>
			<attribute-class>java.util.Date</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string specifying the label associated with the home button.
]]></description>
			<attribute-name>homeDateLabel</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>popupStyleClass</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The expandBar Component is a container that can be collapsed to show only a title bar. Expand Bars can be managed by group : only one element of the group is expanded.</p>
      <p>The expandBar Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Background Image</li>
      	<li>Events Handling</li>
      	<li>Contextual Menu</li>
      	<li>Async Render (AJAX)</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.expandBar</component-type>
		<component-class>org.rcfaces.core.component.ExpandBarComponent</component-class>
		<attribute>
			<description><![CDATA[
A string value indicating the effect to use when transionning from one state to the other. 
		The provided effects are slideUp and slideUpTrans but the list can be augmented.
]]></description>
			<attribute-name>collapseEffect</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the text to show when the component is collapsed.
]]></description>
			<attribute-name>collapsedText</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the user can expand the component.
]]></description>
			<attribute-name>userExpandable</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
A select item (member of a selectable list) that shows an image.
]]></description>
		<component-type>org.rcfaces.core.selectImageItem</component-type>
		<component-class>org.rcfaces.core.component.SelectImageItemComponent</component-class>
		<attribute>
			<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
			<attribute-name>itemValue</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value describing the item.
]]></description>
			<attribute-name>itemDescription</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
			<attribute-name>itemLabel</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
			<attribute-name>itemDisabled</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.selectItem</component-type>
		<component-class>org.rcfaces.core.component.SelectItemComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
A select item (member of a selectable list) that shows an image. Ricer than a selectImageItem.
]]></description>
		<component-type>org.rcfaces.core.UIImageItem</component-type>
		<component-class>org.rcfaces.core.component.UIImageItemComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
			<attribute-name>rendered</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The fieldSet Component is a container with a title (text and/or picture).</p>
      <p>The fieldSet Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Background Image</li>
      	<li>Events Handling</li>
      	<li>Contextual Menu</li>
      	<li>Async Render (AJAX)</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.fieldSet</component-type>
		<component-class>org.rcfaces.core.component.FieldSetComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The helpButton Component is an <A href="/comps/imageButtonComponent.html">ImageButton</A>. It opens a new page showing the url specified in the "helpUrl" property of a component linked by the "for" property.</p>
      <p>The helpButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.helpButton</component-type>
		<component-class>org.rcfaces.core.component.HelpButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The ImageSubmitButton Component is a <a href="/comps/submitButtonComponent.html">submitButton Component</a> that can show an image.</p>
      <p>The ImageSubmitButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.imageSubmitButton</component-type>
		<component-class>org.rcfaces.core.component.ImageSubmitButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The helpMessageZone Component is a placeholder for help messages. The messages are shown when the pointer hover a component and this component has a "helpMessage" property.</p>
      <p>The helpMessageZone Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; position</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.helpMessageZone</component-type>
		<component-class>org.rcfaces.core.component.HelpMessageZoneComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The hyperLink Component translates into a classic hyperlink and is a <A href="/comps/buttonComponent.html">button</A>.</p>
      <p>The hyperLink Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.hyperLink</component-type>
		<component-class>org.rcfaces.core.component.HyperLinkComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The image Component shows an image (it's equivalent to &lt;img .../&gt;).</p>
      <p>The image Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Image</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.image</component-type>
		<component-class>org.rcfaces.core.component.ImageComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The imageButton Component is a <a href="/comps/buttonComponent.html">button Component</a> that can show an image.</p>
      <p>The imageButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.imageButton</component-type>
		<component-class>org.rcfaces.core.component.ImageButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The hiddenValue Component is a non-visual component. It is equivalent to and Input hidden type HTML tag.</p>
      <p>It allows to access and store value on the client and on the server while keeping it concealed. The clientData Component can also be used.</p>
      <p>The hiddenValue Component has the following capability :
      <ul>
        <li>Property changed Event handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.hiddenValue</component-type>
		<component-class>org.rcfaces.core.component.HiddenValueComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The imageCheckButton Component is a <a href="/comps/checkButtonComponent.html">checkButton Component</a> with an image instead of the checkBox.</p>
      <p>The imageCheckButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.imageCheckButton</component-type>
		<component-class>org.rcfaces.core.component.ImageCheckButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The imageCombo Component is a <a href="/comps/comboComponent.html">combo Component</a> with an image added to the text.</p>
      <p>The imageCombo Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.imageCombo</component-type>
		<component-class>org.rcfaces.core.component.ImageComboComponent</component-class>
		<attribute>
			<description><![CDATA[
Experimental : do not use!
]]></description>
			<attribute-name>popupRowNumber</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The imagePagerButton Component is an <a href="/comps/imageButtonComponent.html">imageButton Component</a> that works like the keyword in the <a href="/comps/pagerComponent.html">pager Component</a> and is linked to the <a href="/comps/dataGridComponent.html">dataGrid Component</a>.
      It shows informations about the result set (ex: number of available pages) 
      and can give direct access to a specific page ("a la Google").</p>
      <p>The imagePagerButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
      <p>The authorized types are :
      <ul>
        <li>first</li>
        <li>prev</li>
        <li>next</li>
        <li>last</li>
        <li>&lt;number&gt; where number is a page number</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.imagePagerButton</component-type>
		<component-class>org.rcfaces.core.component.ImagePagerButtonComponent</component-class>
		<attribute>
			<description><![CDATA[
A string value specifying the type of data (Java) to convert to or from.
]]></description>
			<attribute-name>type</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the component should be hide when it is not available.
]]></description>
			<attribute-name>hideIfDisabled</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.textEditorImageButton</component-type>
		<component-class>org.rcfaces.core.component.TextEditorImageButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The imageRadioButton Component is a <a href="/comps/radioButtonComponent.html">radioButton Component</a> with an image instead of the rounded box.</p>
      <p>The imageRadioButton Component has the following capabilities :
        <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.imageRadioButton</component-type>
		<component-class>org.rcfaces.core.component.ImageRadioButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The imageResetButton Component is a <a href="/comps/resetButtonComponent.html">resetButton Component</a> that can show an image.</p>
      <p>The imageResetButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.imageResetButton</component-type>
		<component-class>org.rcfaces.core.component.ImageResetButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The lineBreak Component is the &lt;BR&gt; HTML equivalent.</p>
      <p>It is used often when simple HTML is not desirable : for example if a part of a page is loaded via AJAX it might be easier to have only a jsf tree memory represantation.</p>
      <p>The lineBreak Component has the following capability :
      <ul>
        <li>Visibility</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.lineBreak</component-type>
		<component-class>org.rcfaces.core.component.LineBreakComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
			<attribute-name>rendered</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The list Component is based on the standard HTML tag &lt;SELECT&gt;.</p>
      <p>The list Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text ,&amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.list</component-type>
		<component-class>org.rcfaces.core.component.ListComponent</component-class>
		<attribute>
			<description><![CDATA[
An int value specifying the number of rows to be displayed.
]]></description>
			<attribute-name>rowNumber</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.messageDialog</component-type>
		<component-class>org.rcfaces.core.component.MessageDialogComponent</component-class>
	</component>
	<component>
		<component-type>org.rcfaces.core.viewDialog</component-type>
		<component-class>org.rcfaces.core.component.ViewDialogComponent</component-class>
	</component>
	<component>
		<component-type>org.rcfaces.core.submitWait</component-type>
		<component-class>org.rcfaces.core.component.SubmitWaitComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The message Component is a placeholder for error messages (only one is shown).</p>
      <p>The message Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.message</component-type>
		<component-class>org.rcfaces.core.component.MessageComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the component should be shown when a message is fired.
]]></description>
			<attribute-name>showIfMessage</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>showActiveComponentMessage</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The messageFieldSet Component is a <a href="/comps/fieldSetComponent.html">fieldSet Component</a> combined with a <a href="/comps/messageComponent.html">message COmponent</a> in the title part.</p>
      <p>The messageFieldSet Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Background Image</li>
      	<li>Events Handling</li>
      	<li>Contextual Menu</li>
      	<li>Async Render (AJAX)</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.messageFieldSet</component-type>
		<component-class>org.rcfaces.core.component.MessageFieldSetComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the component should be get the focus when a message is fired.
]]></description>
			<attribute-name>setFocusIfMessage</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>showActiveComponentMessage</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The messages Component is a placeholder for error messages (several messages can be shown simultaneously).</p>
      <p>The messages Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.messages</component-type>
		<component-class>org.rcfaces.core.component.MessagesComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the component should be shown when a message is fired.
]]></description>
			<attribute-name>showIfMessage</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>showActiveComponentMessage</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>maxCount</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The menu Component provides a way of creating desktop style menus on web pages. It allows sub-menus, check and radio menu items and image menus. It also provides pop-up menus.</p>
      <p>The menu Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; images</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.menu</component-type>
		<component-class>org.rcfaces.core.component.MenuComponent</component-class>
		<attribute>
			<description><![CDATA[
An id used to retreive a specific menu. For example, "#node" is used to call a menu on a tree node while "#body" is used for the menu boody.
]]></description>
			<attribute-name>menuId</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value specifying wether the content of the component must be remove before the listener is called and the component displayed.
]]></description>
			<attribute-name>removeAllWhenShown</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
Describes a top-level menu bar.
]]></description>
		<component-type>org.rcfaces.core.menuBar</component-type>
		<component-class>org.rcfaces.core.component.MenuBarComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
A menu item with a check.
]]></description>
		<component-type>org.rcfaces.core.menuCheckItem</component-type>
		<component-class>org.rcfaces.core.component.MenuCheckItemComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
A menu item
]]></description>
		<component-type>org.rcfaces.core.menuItem</component-type>
		<component-class>org.rcfaces.core.component.MenuItemComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value specifying wether the content of the component must be remove before the listener is called and the component displayed.
]]></description>
			<attribute-name>removeAllWhenShown</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
A separator Menu item
]]></description>
		<component-type>org.rcfaces.core.menuSeparator</component-type>
		<component-class>org.rcfaces.core.component.MenuSeparatorComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
A menu item with a radiobutton (see attribute GroupName)
]]></description>
		<component-type>org.rcfaces.core.menuRadioItem</component-type>
		<component-class>org.rcfaces.core.component.MenuRadioItemComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<b>NOT COMPLETE</b>
]]></description>
		<component-type>org.rcfaces.core.numberEntry</component-type>
		<component-class>org.rcfaces.core.component.NumberEntryComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
			<attribute-name>autoCompletion</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value indicating the number of digits to show before the decimal separator.
]]></description>
			<attribute-name>integerDigits</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value indicating the number of digits to show after the decimal separator.
]]></description>
			<attribute-name>fractionDigits</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the format to use (compliant with java format).
]]></description>
			<attribute-name>numberFormat</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the step used for the integer field when increasing/decreasing the value with the up/down arrows.
]]></description>
			<attribute-name>integerStep</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
Experimental Do not use.
]]></description>
			<attribute-name>fractionStep</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A number typed value.
]]></description>
			<attribute-name>number</attribute-name>
			<attribute-class>java.lang.Number</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the lower limit for the value of the component.
]]></description>
			<attribute-name>minimum</attribute-name>
			<attribute-class>java.lang.Number</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
the default value.
]]></description>
			<attribute-name>defaultNumber</attribute-name>
			<attribute-class>java.lang.Number</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the upper limit for the value of the component.
]]></description>
			<attribute-name>maximum</attribute-name>
			<attribute-class>java.lang.Number</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The passwordEntry Component is based on the standard HTML tag &lt;INPUT TYPE="password"&gt; and is a <a href="/comps/textEntryComponent.html">textEntry Component</a>.</p>
      <p>The passwordEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.passwordEntry</component-type>
		<component-class>org.rcfaces.core.component.PasswordEntryComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The progressBar Component indicates the evolution of a task.</p>
      <p>The progressBar Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.progressBar</component-type>
		<component-class>org.rcfaces.core.component.ProgressBarComponent</component-class>
		<attribute>
			<description><![CDATA[
An int value specifying the lower limit for the value of the component.
]]></description>
			<attribute-name>minimum</attribute-name>
			<attribute-class>double</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the upper limit for the value of the component.
]]></description>
			<attribute-name>maximum</attribute-name>
			<attribute-class>double</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the value is not determinated.
]]></description>
			<attribute-name>indeterminate</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The progressIndicator Component indicates the evolution of a task. It uses the <a href="/comps/progressBarComponent.html">porgressBar Component</a> and add text information to it.</p>
      <p>The progressIndicator Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.progressIndicator</component-type>
		<component-class>org.rcfaces.core.component.ProgressIndicatorComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the value is not determinated.
]]></description>
			<attribute-name>indeterminate</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The suggestTextEntry is a <a href="/comps/textEntryCOmponent.html">textEntry Component</a> with an autosuggestion feature that shows in the form of a dropdown list.</p>
      <p>The suggestTextEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.suggestTextEntry</component-type>
		<component-class>org.rcfaces.core.component.SuggestTextEntryComponent</component-class>
		<attribute>
			<description><![CDATA[
An int value specifying the delay in milliseconds before showing the suggestion list.
]]></description>
			<attribute-name>suggestionDelayMs</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the minimum number of characters before the suggestion is calculated.
]]></description>
			<attribute-name>suggestionMinChars</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating if the component should consider the case of the user input when using the data.
]]></description>
			<attribute-name>caseSensitive</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating if the first proposed value must be automatically appended to the current entry.
]]></description>
			<attribute-name>forceProposal</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value containing the value for the selected select item object.
]]></description>
			<attribute-name>suggestionValue</attribute-name>
			<attribute-class>java.lang.Object</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string specifying a converter id or a binding to a converter object. This converter will be used for the values of the list items.
]]></description>
			<attribute-name>suggestionConverter</attribute-name>
			<attribute-class>javax.faces.convert.Converter</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>moreResultsMessage</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>orderedItems</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The radioButton Component is based on the standard HTML tag &lt;INPUT TYPE="radio"&gt;. It can interoperate automatically with other radioButtons from the same group.</p>
      <p>The radioButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.radioButton</component-type>
		<component-class>org.rcfaces.core.component.RadioButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The resetButton Component is based on the standard HTML tag &lt;INPUT TYPE="reset"&gt;. It is a <a href="/comps/buttonComponent.html">button Component</a>.</p>
      <p>The resetButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.resetButton</component-type>
		<component-class>org.rcfaces.core.component.ResetButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The ruler Component is the &lt;HR&gt; HTML equivalent.</p>
      <p>It is used often when simple HTML is not desirable : for example if a part of a page is loaded via AJAX it might be easier to have only a jsf tree memory represantation.</p>
      <p>The ruler Component has the following capability :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Visibility</li>
        <li>Margin</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.ruler</component-type>
		<component-class>org.rcfaces.core.component.RulerComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
			<attribute-name>rendered</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
			<attribute-name>margins</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.scope</component-type>
		<component-class>org.rcfaces.core.component.ScopeComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The submitButton Component is based on the standard HTML tag &lt;INPUT TYPE="submit"&gt;. It is a <a href="/comps/buttonComponent.html">button Component</a>.</p>
      <p>The submitButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.submitButton</component-type>
		<component-class>org.rcfaces.core.component.SubmitButtonComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The spinner Component is a <a href="/comps/textEntryComponent.html">textEntry Component</a> that accepts numbers and whose value can be incremented or decremented (by a parametrable step) with buttons or the keyboard arrows.</p>
      <p>The spinner Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>limits and step</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.spinner</component-type>
		<component-class>org.rcfaces.core.component.SpinnerComponent</component-class>
		<attribute>
			<description><![CDATA[
An int value specifying the lower limit for the value of the component.
]]></description>
			<attribute-name>minimum</attribute-name>
			<attribute-class>double</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the upper limit for the value of the component.
]]></description>
			<attribute-name>maximum</attribute-name>
			<attribute-class>double</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether to start from the beginning when reaching the end or not. And vice versa.
]]></description>
			<attribute-name>cycleValue</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the step used when increasing/decreasing the value with the up/down arrows or buttons.
]]></description>
			<attribute-name>step</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
An englobing tag that changes the style class surronuding a component when a particular message is emitted for a component.
		ex : 
		&lt;v:styledMessage errorStyleClass="formErreur" for="ef1"&gt;
			&lt;v:textEntry 
				id="ef1" 
				... /&gt;
		&lt;/v:styledMessage&gt;
]]></description>
		<component-type>org.rcfaces.core.styledMessage</component-type>
		<component-class>org.rcfaces.core.component.StyledMessageComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the component should be shown when a message is fired.
]]></description>
			<attribute-name>showIfMessage</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the component should be get the focus when a message is fired.
]]></description>
			<attribute-name>setFocusIfMessage</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The styledText Component is a placeholder for displaying "enhanced" text. It accepts any HTML tags. it's a <A href="/comps/textComponent.html">text Component</A></p>
      <p>The styledText Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; justification</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.styledText</component-type>
		<component-class>org.rcfaces.core.component.StyledTextComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The cardBox Component is similar to the <a href="/comps/tabbedPaneComponent.html">tabbedPane Component</a> without title and borders. It is usefull for showing alternatively different contents on the same page.</p>
      <p>The cardBox Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.cardBox</component-type>
		<component-class>org.rcfaces.core.component.CardBoxComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
An element belonging to a <a href="/comps/cardBoxComponent.html">cardBox Component</a> and holding the components.
]]></description>
		<component-type>org.rcfaces.core.card</component-type>
		<component-class>org.rcfaces.core.component.CardComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The tabbedPane Component provides a way to show more information on a single page. It can download the data asynchronously via AJAX.</p>
      <p>The tabbedPane Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.tabbedPane</component-type>
		<component-class>org.rcfaces.core.component.TabbedPaneComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
An element belonging to a <a href="/comps/tabbedPaneComponent.html">tabbedPane Component</a> and holding the components.
]]></description>
		<component-type>org.rcfaces.core.tab</component-type>
		<component-class>org.rcfaces.core.component.TabComponent</component-class>
	</component>
	<component>
		<component-type>org.rcfaces.core.tabNamingContainer</component-type>
		<component-class>org.rcfaces.core.component.TabNamingContainerComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The text Component is a placeholder for displaying text.</p>
      <p>The text Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; justification</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.text</component-type>
		<component-class>org.rcfaces.core.component.TextComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The textAreaEntry Component is based on the standard HTML tag &lt;TEXTAREA&gt; and is a <a href="/comps/textEntryComponent.html">textEntry Component</a>.</p>
      <p>The textAreaEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.textArea</component-type>
		<component-class>org.rcfaces.core.component.TextAreaComponent</component-class>
		<attribute>
			<description><![CDATA[
An int value holding the width of the component in characters : x characters translates into y pixels width.
]]></description>
			<attribute-name>columnNumber</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the number of rows to be displayed.
]]></description>
			<attribute-name>rowNumber</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>ignoreWhenFull</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.textEditor</component-type>
		<component-class>org.rcfaces.core.component.TextEditorComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The textEntry Component is based on the standard HTML tag &lt;INPUT TYPE="text"&gt;.</p>
      <p>The textEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.textEntry</component-type>
		<component-class>org.rcfaces.core.component.TextEntryComponent</component-class>
		<attribute>
			<description><![CDATA[
An int value holding the width of the component in characters : x characters translates into y pixels width.
]]></description>
			<attribute-name>columnNumber</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
			<attribute-name>autoCompletion</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<p>The timeEntry Component is a specialized <a href="/comps/textEntryComponent.html">textEntry Component</a>. it sports auto-completion related to the validity of the numbers entered as a time.</p>
      <p>The timeEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; separators</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Calendar functions</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.timeEntry</component-type>
		<component-class>org.rcfaces.core.component.TimeEntryComponent</component-class>
		<attribute>
			<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
			<attribute-name>autoCompletion</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value (time formatted) for the value of the component.
]]></description>
			<attribute-name>time</attribute-name>
			<attribute-class>Time</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A time value indicating the minimum acceptable time for the component. The first accepted value is greater than minTime.
]]></description>
			<attribute-name>minTime</attribute-name>
			<attribute-class>Time</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
The default value.
]]></description>
			<attribute-name>defaultTime</attribute-name>
			<attribute-class>Time</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A time value indicating the maximum acceptable time for the component. The last accepted value is lesser than maxTime.
]]></description>
			<attribute-name>maxTime</attribute-name>
			<attribute-class>Time</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A string sepcifying the format to apply to the time value.
]]></description>
			<attribute-name>timeFormat</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the step used for the hour field when increasing/decreasing the value with the up/down arrows.
]]></description>
			<attribute-name>hourStep</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the step used for the minute field when increasing/decreasing the value with the up/down arrows.
]]></description>
			<attribute-name>minuteStep</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the step used for the second field when increasing/decreasing the value with the up/down arrows.
]]></description>
			<attribute-name>secondStep</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the step used for the millisecond field when increasing/decreasing the value with the up/down arrows.
]]></description>
			<attribute-name>millisStep</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<b>EXPERIMENTAL</b>
]]></description>
		<component-type>org.rcfaces.core.toolBar</component-type>
		<component-class>org.rcfaces.core.component.ToolBarComponent</component-class>
		<attribute>
			<attribute-name>separatorImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>separatorImageWidth</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>separatorImageHeight</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>separatorAlternateText</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>controlImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>controlImageWidth</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>controlImageHeight</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>controlAlternateText</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>itemPadding</attribute-name>
			<attribute-class>int</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>locked</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<description><![CDATA[
<b>EXPERIMENTAL</b>
]]></description>
		<component-type>org.rcfaces.core.toolFolder</component-type>
		<component-class>org.rcfaces.core.component.ToolFolderComponent</component-class>
	</component>
	<component>
		<component-type>org.rcfaces.core.textEditorToolFolder</component-type>
		<component-class>org.rcfaces.core.component.TextEditorToolFolderComponent</component-class>
	</component>
	<component>
		<component-type>org.rcfaces.core.textEditorCombo</component-type>
		<component-class>org.rcfaces.core.component.TextEditorComboComponent</component-class>
	</component>
	<component>
		<component-type>org.rcfaces.core.itemsToolFolder</component-type>
		<component-class>org.rcfaces.core.component.ItemsToolFolderComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<b>EXPERIMENTAL</b>
]]></description>
		<component-type>org.rcfaces.core.toolItem</component-type>
		<component-class>org.rcfaces.core.component.ToolItemComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<b>EXPERIMENTAL</b>
]]></description>
		<component-type>org.rcfaces.core.toolItemSeparator</component-type>
		<component-class>org.rcfaces.core.component.ToolItemSeparatorComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The tree Component shows informations in an arborescent view. 
      It can be compared to the tree found in most modern file explorer. 
      It allows contextual menus ...</p>
      <p>The tree Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; images</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Contextual actions in node or tree scope</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.tree</component-type>
		<component-class>org.rcfaces.core.component.TreeComponent</component-class>
		<attribute>
			<description><![CDATA[
An url string pointing to the default image.
]]></description>
			<attribute-name>defaultImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An url string pointing to the default image for the selected state.
]]></description>
			<attribute-name>defaultSelectedImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An url string pointing to the default image for an expanded node.
]]></description>
			<attribute-name>defaultExpandedImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An url string pointing to the default image for the disabled state.
]]></description>
			<attribute-name>defaultDisabledImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An url string pointing to the default image for a leaf.
]]></description>
			<attribute-name>defaultLeafImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An url string pointing to the default image for the selected leaf.
]]></description>
			<attribute-name>defaultSelectedLeafImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An url string pointing to the default image for an expanded leaf.
]]></description>
			<attribute-name>defaultExpandedLeafImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
An url string pointing to the default image for a disabled leaf.
]]></description>
			<attribute-name>defaultDisabledLeafImageURL</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the expand sign should be visible for the topmost node.
]]></description>
			<attribute-name>hideRootExpandSign</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
		<attribute>
			<attribute-name>cursorValue</attribute-name>
			<attribute-class>java.lang.Object</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value that indicates wether a node is identified by it's value or by a complete path.
]]></description>
			<attribute-name>expansionUseValue</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.itemsList</component-type>
		<component-class>org.rcfaces.core.component.ItemsListComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
A node belonging to a tree.
]]></description>
		<component-type>org.rcfaces.core.treeNode</component-type>
		<component-class>org.rcfaces.core.component.TreeNodeComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The focusManager Component is a non-visual component.</p>
      <p>It allows to deal with the focus on the current page.</p>
]]></description>
		<component-type>org.rcfaces.core.focusManager</component-type>
		<component-class>org.rcfaces.core.component.FocusManagerComponent</component-class>
		<attribute>
			<description><![CDATA[
A component's id. This component will get the focus.
]]></description>
			<attribute-name>focusId</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the component should be get the focus when a message is fired.
]]></description>
			<attribute-name>setFocusIfMessage</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>org.rcfaces.core.selectItemsIterator</component-type>
		<component-class>org.rcfaces.core.component.SelectItemsIteratorComponent</component-class>
	</component>
	<component>
		<component-type>org.rcfaces.core.viewErrorListener</component-type>
		<component-class>org.rcfaces.core.component.ViewErrorListenerComponent</component-class>
	</component>
	<component>
		<description><![CDATA[
<p>The service Component is a non-visual component.</p>
      <p>It allows to (synchronously or asynchronously) call AJAX services from the client.</p>
      <p>The service Component has the following capability :
      <ul>
        <li>Property changed Event handling</li>
      </ul>
      </p>
]]></description>
		<component-type>org.rcfaces.core.service</component-type>
		<component-class>org.rcfaces.core.component.ServiceComponent</component-class>
		<attribute>
			<description><![CDATA[
An id for the service.
]]></description>
			<attribute-name>serviceId</attribute-name>
			<attribute-class>java.lang.String</attribute-class>
		</attribute>
		<attribute>
			<description><![CDATA[
TODO
]]></description>
			<attribute-name>enableViewState</attribute-name>
			<attribute-class>boolean</attribute-class>
		</attribute>
	</component>
	<component>
		<component-type>javax.faces.HtmlOutputText</component-type>
		<component-class>org.rcfaces.core.internal.component.AsyncHtmlOutputText</component-class>
	</component>
	<converter>
		<converter-id>org.rcfaces.Byte</converter-id>
		<converter-class>org.rcfaces.core.converter.ByteConverter</converter-class>
	</converter>
	<converter>
		<converter-id>org.rcfaces.Short</converter-id>
		<converter-class>org.rcfaces.core.converter.ShortConverter</converter-class>
	</converter>
	<converter>
		<converter-id>org.rcfaces.Integer</converter-id>
		<converter-class>org.rcfaces.core.converter.IntegerConverter</converter-class>
	</converter>
	<converter>
		<converter-id>org.rcfaces.Long</converter-id>
		<converter-class>org.rcfaces.core.converter.LongConverter</converter-class>
	</converter>
	<converter>
		<converter-id>org.rcfaces.Float</converter-id>
		<converter-class>org.rcfaces.core.converter.FloatConverter</converter-class>
	</converter>
	<converter>
		<converter-id>org.rcfaces.Double</converter-id>
		<converter-class>org.rcfaces.core.converter.DoubleConverter</converter-class>
	</converter>
	<lifecycle>
		<phase-listener>org.rcfaces.core.internal.config.ServicesRegistryImpl</phase-listener>
		<phase-listener>org.rcfaces.core.internal.listener.CameliaPhaseListener</phase-listener>
	</lifecycle>
</faces-config>
