<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN" "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib>
	<tlib-version>1.0</tlib-version>
	<jsp-version>1.2</jsp-version>
	<short-name>v</short-name>
	<uri>http://rcfaces.org/core</uri>
	<display-name>RCFaces CORE components</display-name>
	<description><![CDATA[
A set of Components that are not dependant on a specific render-kit.
]]></description>
	<tag>
		<name>accelerator</name>
		<tag-class>org.rcfaces.core.internal.taglib.AcceleratorTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The accelerator Component is a non-visual component.</p>
      <p>It allows to associate an accelerator key to an action or another component.</p>
      <p>The accelerator Component has the following capabilities :
      <ul>
        <li>Key pressed</li>
        <li>Association to another component</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
		<attribute>
			<name>forItemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying a value to select in the component identified in the <b>for</b> property.
]]></description>
		</attribute>
		<attribute>
			<name>keyBinding</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the key associated to the component. for example "Alt+F1"
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>box</name>
		<tag-class>org.rcfaces.core.internal.taglib.BoxTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The Box Component is a container.</p>
      <p>It can have a graphical representation or not; But it is mainly used to apply a collective treatment to a set of component, for example show or hide a group of component.</p>
      <p>The Box Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Background Image</li>
      	<li>Border</li>
      	<li>Events Handling</li>
      	<li>Contextual Menu</li>
      	<li>Async Render (AJAX)</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageHorizontalPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the horizontal positionning for the background image.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageHorizontalRepeat</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the background image should be repeated horizontally or not.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the background image.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageVerticalPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the vertical positionning for the background image.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageVerticalRepeat</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the background image should be repeated vertically or not.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>loadListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is fully loaded (similar to init for AJAX).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>asyncRenderMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the rendering mode for asynchronous capable component.
		<LI>
		<UL>
		If value is "none", the rendering is synchronous (made with the englobing page rendering).
		</UL>
		<UL>
		If value is "buffer", the rendering is calculated with the page and may contains HTML elements, it is sent to the client only when needed (asynchrponously).
		</UL>
		<UL>
		If value is "tree", the rendering is calculated only when needed (the HTML elements are ignored)
		</UL>
		</LI>
]]></description>
		</attribute>
		<attribute>
			<name>scopeValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the binding associated to a variable representing a shortcut. (cf. scopeVar)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>scopeVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of a variable representing a shortcut to a binding. (cf. scopeValue)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>horizontalScroll</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the horizontal scroll is shown.
]]></description>
		</attribute>
		<attribute>
			<name>verticalScroll</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the vertical scroll is shown.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>button</name>
		<tag-class>org.rcfaces.core.internal.taglib.ButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The button Component is equivalent to the standard HTML tag &lt;BUTTON&gt;.</p>
      <p>The button Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>checkButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.CheckButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The checkButton Component is equivalent to the &lt;INPUT TYPE="checkbox"&gt; HTML tag.</p>
      <p>The checkButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>selected</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component is selected.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>checkButton3States</name>
		<tag-class>org.rcfaces.core.internal.taglib.CheckButton3StatesTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The checkButton3States Component is a <a href="/comps/checkButtonComponent.html">CheckButton</a> with 3 states : Check, unchecked and undefined. It is often used to show the state of a group of checkButtons</p>
      <p>This component is <b>experimental</b>.</p>
      <p>The checkButton3States Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedState</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the selected component is undefined.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>combo</name>
		<tag-class>org.rcfaces.core.internal.taglib.ComboTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The combo Component is equivalent to the standard HTML tag &lt;SELECT SIZE=1&gt;.</p>
      <p>The combo Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>filterProperties</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that hold the filters to use on the server side. This property is often set via javascript code.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>customButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.CustomButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
A button Component highly customizable through its API.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>doubleClickListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is double-clicked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>componentsColumn</name>
		<tag-class>org.rcfaces.core.internal.taglib.ComponentsColumnTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>alignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represents the alignement of the data in the component.
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>sortListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is sorted.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>ascending</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates the sorting direction for the component.
]]></description>
		</attribute>
		<attribute>
			<name>sortComparator</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the "compare" function to use. it can reference a javascript function or a keyword :
		<ul><li>
		integer
		</li><li>
		number
		</li><li>
		alpha
		</li><li>
		alphaIgnoreCase
		</li><li>
		time
		</li><li>
		date
		</li><li>
		&lt;javascript function&gt;
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>resizable</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component can be resized by the user.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>menuPopupId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>maxWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the maximum width in pixels (if resizeable).
]]></description>
		</attribute>
		<attribute>
			<name>minWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the minimum width in pixels (if resizeable).
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>cellStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when this cell is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>defaultCellStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>cellDefaultToolTipText</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>cellToolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value containing the text that will appear when the pointer hover the component.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>dataColumn</name>
		<tag-class>org.rcfaces.core.internal.taglib.DataColumnTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
Specify a column.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>alignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represents the alignement of the data in the component.
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>sortListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is sorted.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>ascending</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates the sorting direction for the component.
]]></description>
		</attribute>
		<attribute>
			<name>sortComparator</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the "compare" function to use. it can reference a javascript function or a keyword :
		<ul><li>
		integer
		</li><li>
		number
		</li><li>
		alpha
		</li><li>
		alphaIgnoreCase
		</li><li>
		time
		</li><li>
		date
		</li><li>
		&lt;javascript function&gt;
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>resizable</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component can be resized by the user.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>menuPopupId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>maxWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the maximum width in pixels (if resizeable).
]]></description>
		</attribute>
		<attribute>
			<name>minWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the minimum width in pixels (if resizeable).
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>autoFilter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Experimental
		A boolean value indicating if the component should apply filter automatically.
]]></description>
		</attribute>
		<attribute>
			<name>cellImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image.
]]></description>
		</attribute>
		<attribute>
			<name>defaultCellImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image.
]]></description>
		</attribute>
		<attribute>
			<name>cellStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when this cell is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>defaultCellStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>cellDefaultToolTipText</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>cellToolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value containing the text that will appear when the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>comboColumn</name>
		<tag-class>org.rcfaces.core.internal.taglib.ComboColumnTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>alignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represents the alignement of the data in the component.
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>sortListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is sorted.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>ascending</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates the sorting direction for the component.
]]></description>
		</attribute>
		<attribute>
			<name>sortComparator</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the "compare" function to use. it can reference a javascript function or a keyword :
		<ul><li>
		integer
		</li><li>
		number
		</li><li>
		alpha
		</li><li>
		alphaIgnoreCase
		</li><li>
		time
		</li><li>
		date
		</li><li>
		&lt;javascript function&gt;
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>resizable</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component can be resized by the user.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>maxWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the maximum width in pixels (if resizeable).
]]></description>
		</attribute>
		<attribute>
			<name>minWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the minimum width in pixels (if resizeable).
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>autoFilter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Experimental
		A boolean value indicating if the component should apply filter automatically.
]]></description>
		</attribute>
		<attribute>
			<name>cellImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image.
]]></description>
		</attribute>
		<attribute>
			<name>defaultCellImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image.
]]></description>
		</attribute>
		<attribute>
			<name>cellStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when this cell is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>defaultCellStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>cellDefaultToolTipText</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>cellToolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value containing the text that will appear when the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>pager</name>
		<tag-class>org.rcfaces.core.internal.taglib.PagerTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The pager Component is linked to the <a href="/comps/dataGridComponent.html">dataGrid Component</a>.
      It shows informations about the result set (ex: number of available pages) 
      and can give direct access to a specific page ("a la Google").</p>
      <p>The pager Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
		<attribute>
			<name>manyResultsMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be displayed by the component. It can embbed keywords (between braces : "{keyword}") :
		<ul><li>
		first: the index of the first row shown
		</li><li>
		position: the index of the first row shown
		</li><li>
		pageposition : the index of the page shown
		</li><li>
		last: a link to the last page
		</li><li>
		rowcount : the total number of rows
		</li><li>
		bfirst: a link to the first page
		</li><li>
		bnext: a link to the next page
		</li><li>
		blast: a link to the last page
		</li><li>
		bpages[:n] : a list of links to pages before and after the page shown (n specifies the number of indexes shown)
		</li><li>
		bprev: a link to the previous page
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>message</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be displayed by the component. It can embbed keywords (between braces : "{keyword}") :
		<ul><li>
		first: the index of the first row shown
		</li><li>
		position: the index of the first row shown
		</li><li>
		pageposition : the index of the page shown
		</li><li>
		last: a link to the last page
		</li><li>
		rowcount : the total number of rows
		</li><li>
		bfirst: a link to the first page
		</li><li>
		bnext: a link to the next page
		</li><li>
		blast: a link to the last page
		</li><li>
		bpages[:n] : a list of links to pages before and after the page shown (n specifies the number of indexes shown)
		</li><li>
		bprev: a link to the previous page
		</li></ul>
		ex: "{rowcount}' results, results from '{first}' to '{last}'.\n['{bfirst}'/'{bprev}'] '{bpages}' ['{bnext}'/'{blast}']'"
]]></description>
		</attribute>
		<attribute>
			<name>oneResultMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be displayed by the component when there's only one result. It can embbed keywords (between braces : "{keyword}") :
		<ul><li>
		first: the index of the first row shown
		</li><li>
		position: the index of the first row shown
		</li><li>
		pageposition : the index of the page shown
		</li><li>
		last: a link to the last page
		</li><li>
		rowcount : the total number of rows
		</li><li>
		bfirst: a link to the first page
		</li><li>
		bnext: a link to the next page
		</li><li>
		blast: a link to the last page
		</li><li>
		bpages[:n] : a list of links to pages before and after the page shown (n specifies the number of indexes shown)
		</li><li>
		bprev: a link to the previous page
		</li></ul>
		ex: "One result.\nCome back later !"
		ex: "{rowcount}' results, results from '{first}' to '{last}'.\n['{bfirst}'/'{bprev}'] '{bpages}' ['{bnext}'/'{blast}']'"
]]></description>
		</attribute>
		<attribute>
			<name>zeroResultMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be displayed by the component when there's no result. It can embbed keywords (between braces : "{keyword}") :
		<ul><li>
		first: the index of the first row shown
		</li><li>
		position: the index of the first row shown
		</li><li>
		pageposition : the index of the page shown
		</li><li>
		last: a link to the last page
		</li><li>
		rowcount : the total number of rows
		</li><li>
		bfirst: a link to the first page
		</li><li>
		bnext: a link to the next page
		</li><li>
		blast: a link to the last page
		</li><li>
		bpages[:n] : a list of links to pages before and after the page shown (n specifies the number of indexes shown)
		</li><li>
		bprev: a link to the previous page
		</li></ul>
		ex: "No result.\nCome back later !"
]]></description>
		</attribute>
		<attribute>
			<name>noPagedMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the message to display when there is no row to display.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>dataGrid</name>
		<tag-class>org.rcfaces.core.internal.taglib.DataGridTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The dataGrid Component is a grid component. It can be compared to the grid found in the list part of the modern file explorer. It allows sorts, resizing, contextual menus ...</p>
      <p>The dataGrid Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; images</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Contextual actions in cell, row or table scope</li>
      	<li>...</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>resetListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the reset button is activated on a form.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>first</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A number identifying the row to be displayed at the top of the component.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>rows</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the number of rows to display, starting with the one identified by the
          "first" property.  If this value is set to zero, all available rows in
          the underlying data model will be displayed.
]]></description>
		</attribute>
		<attribute>
			<name>var</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the name of a request-scope attribute under which the model data for the
          row selected by the current value of the "rowIndex" property (i.e.
          also the current value of the "rowData" property) will be exposed.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>selectable</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component can receive a user's selection
]]></description>
		</attribute>
		<attribute>
			<name>selectionCardinality</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the type of multiple selection authorized:
		<ul><li>
		zeromany|*: any number of selections or none
		</li><li>
		one|1: one and only one selection
		</li><li>
		onemany|+: one or more selection
		</li><li>
		optionnal|?: none or one selection
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>selectedValues</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A table of the values associated with selected nodes for the component. (Binding only)
]]></description>
		</attribute>
		<attribute>
			<name>checkListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is checked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkable</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indcating wether the component can be checked. cf. checkCardinality.
]]></description>
		</attribute>
		<attribute>
			<name>checkCardinality</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the cardinality (number of check allowed) for this componenent.
]]></description>
		</attribute>
		<attribute>
			<name>checkedValues</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A table of the values associated with checked nodes for the component. (Binding only)
]]></description>
		</attribute>
		<attribute>
			<name>doubleClickListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is double-clicked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>rowStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when the row is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>horizontalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the horizontal scroolbar.
]]></description>
		</attribute>
		<attribute>
			<name>verticalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the vertical scroolbar (Browser dependant).
]]></description>
		</attribute>
		<attribute>
			<name>filterProperties</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that hold the filters to use on the server side. This property is often set via javascript code.
]]></description>
		</attribute>
		<attribute>
			<name>showValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>preference</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that holds the preferences for the component.
]]></description>
		</attribute>
		<attribute>
			<name>paged</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value specifying wether the results should be displayed by page (thus letting the user choose what page to display via the pager).
		It is ignored if the attribute "rows" is undefined.
		The default value is true. 
		If "rows" is defined and "paged"'s value is set to false, pages are downloaded automatically when the last displayed row is selected.
]]></description>
		</attribute>
		<attribute>
			<name>clientSelectionFullState</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the client should know about the component's full state even if only a part of the data is present (AJAX).
]]></description>
		</attribute>
		<attribute>
			<name>clientCheckFullState</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the client should know about the component's full state even if only a part of the data is present (AJAX).
]]></description>
		</attribute>
		<attribute>
			<name>cursorValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>headerVisible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the header should be visible.
]]></description>
		</attribute>
		<attribute>
			<name>rowValueColumnId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An id for the column containing the key for the row.
]]></description>
		</attribute>
		<attribute>
			<name>rowCountVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of the variable receiving the number of rows.
]]></description>
		</attribute>
		<attribute>
			<name>rowIndexVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of the variable receiving the index of the current row.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>componentsGrid</name>
		<tag-class>org.rcfaces.core.internal.taglib.ComponentsGridTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
Reserved for future use
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>resetListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the reset button is activated on a form.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>var</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the name of a request-scope attribute under which the model data for the
          row selected by the current value of the "rowIndex" property (i.e.
          also the current value of the "rowData" property) will be exposed.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>first</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A number identifying the row to be displayed at the top of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rows</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the number of rows to display, starting with the one identified by the
          "first" property.  If this value is set to zero, all available rows in
          the underlying data model will be displayed.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>selectable</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component can receive a user's selection
]]></description>
		</attribute>
		<attribute>
			<name>selectionCardinality</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the type of multiple selection authorized:
		<ul><li>
		zeromany|*: any number of selections or none
		</li><li>
		one|1: one and only one selection
		</li><li>
		onemany|+: one or more selection
		</li><li>
		optionnal|?: none or one selection
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>selectedValues</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A table of the values associated with selected nodes for the component. (Binding only)
]]></description>
		</attribute>
		<attribute>
			<name>doubleClickListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is double-clicked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>rowStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when the row is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>horizontalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the horizontal scroolbar.
]]></description>
		</attribute>
		<attribute>
			<name>verticalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the vertical scroolbar (Browser dependant).
]]></description>
		</attribute>
		<attribute>
			<name>preference</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that holds the preferences for the component.
]]></description>
		</attribute>
		<attribute>
			<name>paged</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value specifying wether the results should be displayed by page (thus letting the user choose what page to display via the pager).
		It is ignored if the attribute "rows" is undefined.
		The default value is true. 
		If "rows" is defined and "paged"'s value is set to false, pages are downloaded automatically when the last displayed row is selected.
]]></description>
		</attribute>
		<attribute>
			<name>rowCountVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of the variable receiving the number of rows.
]]></description>
		</attribute>
		<attribute>
			<name>rowIndexVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of the variable receiving the index of the current row.
]]></description>
		</attribute>
		<attribute>
			<name>rowValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>rowValueConverter</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>clientSelectionFullState</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the client should know about the component's full state even if only a part of the data is present (AJAX).
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>comboGrid</name>
		<tag-class>org.rcfaces.core.internal.taglib.ComboGridTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>resetListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the reset button is activated on a form.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>first</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A number identifying the row to be displayed at the top of the component.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>rows</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the number of rows to display, starting with the one identified by the
          "first" property.  If this value is set to zero, all available rows in
          the underlying data model will be displayed.
]]></description>
		</attribute>
		<attribute>
			<name>var</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the name of a request-scope attribute under which the model data for the
          row selected by the current value of the "rowIndex" property (i.e.
          also the current value of the "rowData" property) will be exposed.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>rowStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when the row is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>manyResultsMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be displayed by the component. It can embbed keywords (between braces : "{keyword}") :
		<ul><li>
		first: the index of the first row shown
		</li><li>
		position: the index of the first row shown
		</li><li>
		pageposition : the index of the page shown
		</li><li>
		last: a link to the last page
		</li><li>
		rowcount : the total number of rows
		</li><li>
		bfirst: a link to the first page
		</li><li>
		bnext: a link to the next page
		</li><li>
		blast: a link to the last page
		</li><li>
		bpages[:n] : a list of links to pages before and after the page shown (n specifies the number of indexes shown)
		</li><li>
		bprev: a link to the previous page
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>message</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be displayed by the component. It can embbed keywords (between braces : "{keyword}") :
		<ul><li>
		first: the index of the first row shown
		</li><li>
		position: the index of the first row shown
		</li><li>
		pageposition : the index of the page shown
		</li><li>
		last: a link to the last page
		</li><li>
		rowcount : the total number of rows
		</li><li>
		bfirst: a link to the first page
		</li><li>
		bnext: a link to the next page
		</li><li>
		blast: a link to the last page
		</li><li>
		bpages[:n] : a list of links to pages before and after the page shown (n specifies the number of indexes shown)
		</li><li>
		bprev: a link to the previous page
		</li></ul>
		ex: "{rowcount}' results, results from '{first}' to '{last}'.\n['{bfirst}'/'{bprev}'] '{bpages}' ['{bnext}'/'{blast}']'"
]]></description>
		</attribute>
		<attribute>
			<name>oneResultMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be displayed by the component when there's only one result. It can embbed keywords (between braces : "{keyword}") :
		<ul><li>
		first: the index of the first row shown
		</li><li>
		position: the index of the first row shown
		</li><li>
		pageposition : the index of the page shown
		</li><li>
		last: a link to the last page
		</li><li>
		rowcount : the total number of rows
		</li><li>
		bfirst: a link to the first page
		</li><li>
		bnext: a link to the next page
		</li><li>
		blast: a link to the last page
		</li><li>
		bpages[:n] : a list of links to pages before and after the page shown (n specifies the number of indexes shown)
		</li><li>
		bprev: a link to the previous page
		</li></ul>
		ex: "One result.\nCome back later !"
		ex: "{rowcount}' results, results from '{first}' to '{last}'.\n['{bfirst}'/'{bprev}'] '{bpages}' ['{bnext}'/'{blast}']'"
]]></description>
		</attribute>
		<attribute>
			<name>zeroResultMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be displayed by the component when there's no result. It can embbed keywords (between braces : "{keyword}") :
		<ul><li>
		first: the index of the first row shown
		</li><li>
		position: the index of the first row shown
		</li><li>
		pageposition : the index of the page shown
		</li><li>
		last: a link to the last page
		</li><li>
		rowcount : the total number of rows
		</li><li>
		bfirst: a link to the first page
		</li><li>
		bnext: a link to the next page
		</li><li>
		blast: a link to the last page
		</li><li>
		bpages[:n] : a list of links to pages before and after the page shown (n specifies the number of indexes shown)
		</li><li>
		bprev: a link to the previous page
		</li></ul>
		ex: "No result.\nCome back later !"
]]></description>
		</attribute>
		<attribute>
			<name>horizontalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the horizontal scroolbar.
]]></description>
		</attribute>
		<attribute>
			<name>verticalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the vertical scroolbar (Browser dependant).
]]></description>
		</attribute>
		<attribute>
			<name>filterProperties</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that hold the filters to use on the server side. This property is often set via javascript code.
]]></description>
		</attribute>
		<attribute>
			<name>paged</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value specifying wether the results should be displayed by page (thus letting the user choose what page to display via the pager).
		It is ignored if the attribute "rows" is undefined.
		The default value is true. 
		If "rows" is defined and "paged"'s value is set to false, pages are downloaded automatically when the last displayed row is selected.
]]></description>
		</attribute>
		<attribute>
			<name>suggestionDelayMs</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the delay in milliseconds before showing the suggestion list.
]]></description>
		</attribute>
		<attribute>
			<name>suggestionMinChars</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the minimum number of characters before the suggestion is calculated.
]]></description>
		</attribute>
		<attribute>
			<name>rowCountVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of the variable receiving the number of rows.
]]></description>
		</attribute>
		<attribute>
			<name>rowIndexVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of the variable receiving the index of the current row.
]]></description>
		</attribute>
		<attribute>
			<name>valueColumnId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>labelColumnId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectedValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>popupWidth</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>popupHeight</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>valueFormat</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>pagerStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>pagerLookId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>gridStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>gridLookId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>componentsList</name>
		<tag-class>org.rcfaces.core.internal.taglib.ComponentsListTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
Shows the components for each data with pagination.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>resetListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the reset button is activated on a form.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>var</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the name of a request-scope attribute under which the model data for the
          row selected by the current value of the "rowIndex" property (i.e.
          also the current value of the "rowData" property) will be exposed.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>first</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A number identifying the row to be displayed at the top of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rows</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the number of rows to display, starting with the one identified by the
          "first" property.  If this value is set to zero, all available rows in
          the underlying data model will be displayed.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>horizontalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the horizontal scroolbar.
]]></description>
		</attribute>
		<attribute>
			<name>verticalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the vertical scroolbar (Browser dependant).
]]></description>
		</attribute>
		<attribute>
			<name>rowCountVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of the variable receiving the number of rows.
]]></description>
		</attribute>
		<attribute>
			<name>rowIndexVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of the variable receiving the index of the current row.
]]></description>
		</attribute>
		<attribute>
			<name>columnNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value holding the width of the component in characters : x characters translates into y pixels width.
]]></description>
		</attribute>
		<attribute>
			<name>rowStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when the row is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>columnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied when this column is rendered. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>dateItem</name>
		<tag-class>org.rcfaces.core.internal.taglib.DateItemTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
An item specialized for date values.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>menuPopupId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>literalLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>literalTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>date</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The date value. (format : according the the declared locale)
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>calendar</name>
		<tag-class>org.rcfaces.core.internal.taglib.CalendarTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The calendar Component shows a calendar. It can be customized in differents ways (days off, holidays, tool tips ...).</p>
      <p>The calendar Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Calendar functions</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>literalLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>literalTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>clientDatesStrategy</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the AJAX transfert strategy for the calendar component : the dates' characteristics (styleClass, toolTip ...).
		Those characteristics can be retrieved by month, year or totally.
]]></description>
		</attribute>
		<attribute>
			<name>twoDigitYearStart</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the year considered as base for selecting a date when the associated dateEntry's value's year has only two digits.
]]></description>
		</attribute>
		<attribute>
			<name>minDate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A date value indicating the minimum acceptable date for the component. the first accepted value is minDate plus one day.
]]></description>
		</attribute>
		<attribute>
			<name>maxDate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A date value indicating the maximum acceptable date for the component. The last accepted value is maxDate minus one day.
]]></description>
		</attribute>
		<attribute>
			<name>disabledWeekDays</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A list of disabled week days (depending on the locale specified for the component).
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>mode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the selection mode :
		<ul><li>
		date: one day per selection
		</li><li>
		period: a continuous period of time
		</li><li>
		periods: several non-continuous period of time (for example every wednesday)
		</li></ul>
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>dateEntry</name>
		<tag-class>org.rcfaces.core.internal.taglib.DateEntryTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The dateEntry Component is a specialized <a href="/comps/textEntryComponent.html">textEntry Component</a>. it sports auto-completion related to the validity of the numbers entered as a date.</p>
      <p>The dateEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; separators</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Calendar functions</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>literalLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>literalTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>clientDatesStrategy</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the AJAX transfert strategy for the calendar component : the dates' characteristics (styleClass, toolTip ...).
		Those characteristics can be retrieved by month, year or totally.
]]></description>
		</attribute>
		<attribute>
			<name>twoDigitYearStart</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the year considered as base for selecting a date when the associated dateEntry's value's year has only two digits.
]]></description>
		</attribute>
		<attribute>
			<name>minDate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A date value indicating the minimum acceptable date for the component. the first accepted value is minDate plus one day.
]]></description>
		</attribute>
		<attribute>
			<name>maxDate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A date value indicating the maximum acceptable date for the component. The last accepted value is maxDate minus one day.
]]></description>
		</attribute>
		<attribute>
			<name>disabledWeekDays</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A list of disabled week days (depending on the locale specified for the component).
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>autoTab</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the focus should move automatically to the next element when the entry is completed.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>showCalendarOnFocus</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the associated <a href="/comps/dateCHooserComponent.html">dateChooser Component</a> should be automatically opened when the component gets the focus.
]]></description>
		</attribute>
		<attribute>
			<name>autoCompletion</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
		</attribute>
		<attribute>
			<name>dateFormat</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the format to apply to the date value.
]]></description>
		</attribute>
		<attribute>
			<name>defaultDate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The date selected by default.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>dateChooser</name>
		<tag-class>org.rcfaces.core.internal.taglib.DateChooserTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The dateChooser Component is a button that shows a calendar and help the user to choose a date. It can be associated to a entry field, the choosen date is then automatically entered in the field. It works like an <a href="/comps/imageButtonComponent.html">Image Button Component</a>. The dateChooser Component does <b>not</b> provide an Entry field.</p>
      <p>The dateChooser Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>literalLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>literalTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>clientDatesStrategy</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the AJAX transfert strategy for the calendar component : the dates' characteristics (styleClass, toolTip ...).
		Those characteristics can be retrieved by month, year or totally.
]]></description>
		</attribute>
		<attribute>
			<name>twoDigitYearStart</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the year considered as base for selecting a date when the associated dateEntry's value's year has only two digits.
]]></description>
		</attribute>
		<attribute>
			<name>minDate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A date value indicating the minimum acceptable date for the component. the first accepted value is minDate plus one day.
]]></description>
		</attribute>
		<attribute>
			<name>maxDate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A date value indicating the maximum acceptable date for the component. The last accepted value is maxDate minus one day.
]]></description>
		</attribute>
		<attribute>
			<name>disabledWeekDays</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A list of disabled week days (depending on the locale specified for the component).
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
		<attribute>
			<name>forValueFormat</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the format to use for the value that will be send to the component specified in the <b>for</b> property.
]]></description>
		</attribute>
		<attribute>
			<name>homeDate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the date selected when the "home" button is pressed.
		Authorized values are :
		<ul><li>
		today : the current day with time = 00:00
		</li><li>
		now : the current day with the current time for the locale specified for the component
		</li><li>
		yesterday : the previous day with time = 00:00
		</li><li>
		tomorrow : the following day with time = 00:00
		</li><li>
		a date : depending on the locale specified for the component
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>homeDateLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the label associated with the home button.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>expandBar</name>
		<tag-class>org.rcfaces.core.internal.taglib.ExpandBarTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The expandBar Component is a container that can be collapsed to show only a title bar. Expand Bars can be managed by group : only one element of the group is expanded.</p>
      <p>The expandBar Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Background Image</li>
      	<li>Events Handling</li>
      	<li>Contextual Menu</li>
      	<li>Async Render (AJAX)</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>asyncRenderMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the rendering mode for asynchronous capable component.
		<LI>
		<UL>
		If value is "none", the rendering is synchronous (made with the englobing page rendering).
		</UL>
		<UL>
		If value is "buffer", the rendering is calculated with the page and may contains HTML elements, it is sent to the client only when needed (asynchrponously).
		</UL>
		<UL>
		If value is "tree", the rendering is calculated only when needed (the HTML elements are ignored)
		</UL>
		</LI>
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>collapsed</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component is collapsed.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>groupName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the name of the virtual entity that links different components together.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>loadListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is fully loaded (similar to init for AJAX).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>scopeValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the binding associated to a variable representing a shortcut. (cf. scopeVar)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>scopeVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of a variable representing a shortcut to a binding. (cf. scopeValue)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>collapseEffect</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the effect to use when transionning from one state to the other. 
		The provided effects are slideUp and slideUpTrans but the list can be augmented.
]]></description>
		</attribute>
		<attribute>
			<name>collapsedText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text to show when the component is collapsed.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>selectImageItem</name>
		<tag-class>org.rcfaces.core.internal.taglib.SelectImageItemTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
A select item (member of a selectable list) that shows an image.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>uiImageItem</name>
		<tag-class>org.rcfaces.core.internal.taglib.UIImageItemTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
A select item (member of a selectable list) that shows an image. Ricer than a selectImageItem.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>fieldSet</name>
		<tag-class>org.rcfaces.core.internal.taglib.FieldSetTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The fieldSet Component is a container with a title (text and/or picture).</p>
      <p>The fieldSet Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Background Image</li>
      	<li>Events Handling</li>
      	<li>Contextual Menu</li>
      	<li>Async Render (AJAX)</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>scopeValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the binding associated to a variable representing a shortcut. (cf. scopeVar)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>scopeVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of a variable representing a shortcut to a binding. (cf. scopeValue)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>helpButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.HelpButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The helpButton Component is an <A href="/comps/imageButtonComponent.html">ImageButton</A>. It opens a new page showing the url specified in the "helpUrl" property of a component linked by the "for" property.</p>
      <p>The helpButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>imageSubmitButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.ImageSubmitButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The ImageSubmitButton Component is a <a href="/comps/submitButtonComponent.html">submitButton Component</a> that can show an image.</p>
      <p>The ImageSubmitButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>helpMessageZone</name>
		<tag-class>org.rcfaces.core.internal.taglib.HelpMessageZoneTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The helpMessageZone Component is a placeholder for help messages. The messages are shown when the pointer hover a component and this component has a "helpMessage" property.</p>
      <p>The helpMessageZone Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; position</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>hyperLink</name>
		<tag-class>org.rcfaces.core.internal.taglib.HyperLinkTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The hyperLink Component translates into a classic hyperlink and is a <A href="/comps/buttonComponent.html">button</A>.</p>
      <p>The hyperLink Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>image</name>
		<tag-class>org.rcfaces.core.internal.taglib.ImageTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The image Component shows an image (it's equivalent to &lt;img .../&gt;).</p>
      <p>The image Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Image</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>filterProperties</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that hold the filters to use on the server side. This property is often set via javascript code.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>imageButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.ImageButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The imageButton Component is a <a href="/comps/buttonComponent.html">button Component</a> that can show an image.</p>
      <p>The imageButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>hiddenValue</name>
		<tag-class>org.rcfaces.core.internal.taglib.HiddenValueTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The hiddenValue Component is a non-visual component. It is equivalent to and Input hidden type HTML tag.</p>
      <p>It allows to access and store value on the client and on the server while keeping it concealed. The clientData Component can also be used.</p>
      <p>The hiddenValue Component has the following capability :
      <ul>
        <li>Property changed Event handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>imageCheckButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.ImageCheckButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The imageCheckButton Component is a <a href="/comps/checkButtonComponent.html">checkButton Component</a> with an image instead of the checkBox.</p>
      <p>The imageCheckButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>selected</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>imageCombo</name>
		<tag-class>org.rcfaces.core.internal.taglib.ImageComboTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The imageCombo Component is a <a href="/comps/comboComponent.html">combo Component</a> with an image added to the text.</p>
      <p>The imageCombo Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is checked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkedValues</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A table of the values associated with checked nodes for the component. (Binding only)
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>removeAllWhenShown</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value specifying wether the content of the component must be remove before the listener is called and the component displayed.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>showDropDownMark</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>popupRowNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Experimental : do not use!
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>imagePagerButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.ImagePagerButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The imagePagerButton Component is an <a href="/comps/imageButtonComponent.html">imageButton Component</a> that works like the keyword in the <a href="/comps/pagerComponent.html">pager Component</a> and is linked to the <a href="/comps/dataGridComponent.html">dataGrid Component</a>.
      It shows informations about the result set (ex: number of available pages) 
      and can give direct access to a specific page ("a la Google").</p>
      <p>The imagePagerButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
      <p>The authorized types are :
      <ul>
        <li>first</li>
        <li>prev</li>
        <li>next</li>
        <li>last</li>
        <li>&lt;number&gt; where number is a page number</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
		<attribute>
			<name>type</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the type of data (Java) to convert to or from.
]]></description>
		</attribute>
		<attribute>
			<name>hideIfDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component should be hide when it is not available.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>imageRadioButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.ImageRadioButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The imageRadioButton Component is a <a href="/comps/radioButtonComponent.html">radioButton Component</a> with an image instead of the rounded box.</p>
      <p>The imageRadioButton Component has the following capabilities :
        <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>selected</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>radioValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the value associated with the group when this component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>groupName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the name of the virtual entity that links different components together.
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>imageResetButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.ImageResetButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The imageResetButton Component is a <a href="/comps/resetButtonComponent.html">resetButton Component</a> that can show an image.</p>
      <p>The imageResetButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>lineBreak</name>
		<tag-class>org.rcfaces.core.internal.taglib.LineBreakTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The lineBreak Component is the &lt;BR&gt; HTML equivalent.</p>
      <p>It is used often when simple HTML is not desirable : for example if a part of a page is loaded via AJAX it might be easier to have only a jsf tree memory represantation.</p>
      <p>The lineBreak Component has the following capability :
      <ul>
        <li>Visibility</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>list</name>
		<tag-class>org.rcfaces.core.internal.taglib.ListTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The list Component is based on the standard HTML tag &lt;SELECT&gt;.</p>
      <p>The list Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text ,&amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>filterProperties</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that hold the filters to use on the server side. This property is often set via javascript code.
]]></description>
		</attribute>
		<attribute>
			<name>multipleSelect</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether multiple selection is permitted.
]]></description>
		</attribute>
		<attribute>
			<name>doubleClickListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is double-clicked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>rowNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the number of rows to be displayed.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>messageDialog</name>
		<tag-class>org.rcfaces.core.internal.taglib.MessageDialogTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>dialogPriority</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the title for the document.
]]></description>
		</attribute>
		<attribute>
			<name>defaultValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>viewDialog</name>
		<tag-class>org.rcfaces.core.internal.taglib.ViewDialogTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>dialogPriority</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>viewURL</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>message</name>
		<tag-class>org.rcfaces.core.internal.taglib.MessageTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The message Component is a placeholder for error messages (only one is shown).</p>
      <p>The message Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>showSummary</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the summary portion of displayed messages
          should be included.  Default value is "false".
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
		<attribute>
			<name>showDetail</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the summary portion of displayed messages
          should be included.  Default value is "true".
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>errorImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to an image used for error messages.
]]></description>
		</attribute>
		<attribute>
			<name>fatalImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image for a fatal message.
]]></description>
		</attribute>
		<attribute>
			<name>infoImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for an info message.
]]></description>
		</attribute>
		<attribute>
			<name>warnImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for a warning message.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>setFocusIfMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component should be get the focus when a message is fired.
]]></description>
		</attribute>
		<attribute>
			<name>showIfMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component should be shown when a message is fired.
]]></description>
		</attribute>
		<attribute>
			<name>showActiveComponentMessage</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>messageFieldSet</name>
		<tag-class>org.rcfaces.core.internal.taglib.MessageFieldSetTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The messageFieldSet Component is a <a href="/comps/fieldSetComponent.html">fieldSet Component</a> combined with a <a href="/comps/messageComponent.html">message COmponent</a> in the title part.</p>
      <p>The messageFieldSet Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Background Image</li>
      	<li>Events Handling</li>
      	<li>Contextual Menu</li>
      	<li>Async Render (AJAX)</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>scopeValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the binding associated to a variable representing a shortcut. (cf. scopeVar)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>scopeVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of a variable representing a shortcut to a binding. (cf. scopeValue)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>errorImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to an image used for error messages.
]]></description>
		</attribute>
		<attribute>
			<name>fatalImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image for a fatal message.
]]></description>
		</attribute>
		<attribute>
			<name>infoImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for an info message.
]]></description>
		</attribute>
		<attribute>
			<name>warnImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for a warning message.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>setFocusIfMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component should be get the focus when a message is fired.
]]></description>
		</attribute>
		<attribute>
			<name>showActiveComponentMessage</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>messages</name>
		<tag-class>org.rcfaces.core.internal.taglib.MessagesTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The messages Component is a placeholder for error messages (several messages can be shown simultaneously).</p>
      <p>The messages Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>globalOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the component specific messages should be shown or not.
]]></description>
		</attribute>
		<attribute>
			<name>showDetail</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the summary portion of displayed messages
          should be included.  Default value is "true".
]]></description>
		</attribute>
		<attribute>
			<name>showSummary</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the summary portion of displayed messages
          should be included.  Default value is "false".
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>showIfMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component should be shown when a message is fired.
]]></description>
		</attribute>
		<attribute>
			<name>showActiveComponentMessage</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>menu</name>
		<tag-class>org.rcfaces.core.internal.taglib.MenuTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The menu Component provides a way of creating desktop style menus on web pages. It allows sub-menus, check and radio menu items and image menus. It also provides pop-up menus.</p>
      <p>The menu Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; images</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>preloadedLevelDepth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the number of levels that should be preloaded when a node is displayed.
]]></description>
		</attribute>
		<attribute>
			<name>menuListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a menu is activated.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is checked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkedValues</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A table of the values associated with checked nodes for the component. (Binding only)
]]></description>
		</attribute>
		<attribute>
			<name>menuId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An id used to retreive a specific menu. For example, "#node" is used to call a menu on a tree node while "#body" is used for the menu boody.
]]></description>
		</attribute>
		<attribute>
			<name>removeAllWhenShown</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value specifying wether the content of the component must be remove before the listener is called and the component displayed.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>menuBar</name>
		<tag-class>org.rcfaces.core.internal.taglib.MenuBarTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
Describes a top-level menu bar.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is checked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkedValues</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A table of the values associated with checked nodes for the component. (Binding only)
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>removeAllWhenShown</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value specifying wether the content of the component must be remove before the listener is called and the component displayed.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>menuCheckItem</name>
		<tag-class>org.rcfaces.core.internal.taglib.MenuCheckItemTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
A menu item with a check.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>expandedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to an image used for the expanded state.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>acceleratorKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the (composed) key used to execute an action from the keyboard.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>menuListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a menu is activated.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>removeAllWhenShown</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value specifying wether the content of the component must be remove before the listener is called and the component displayed.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>menuItem</name>
		<tag-class>org.rcfaces.core.internal.taglib.MenuItemTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
A menu item
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>expandedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to an image used for the expanded state.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>acceleratorKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the (composed) key used to execute an action from the keyboard.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>menuListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a menu is activated.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>removeAllWhenShown</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value specifying wether the content of the component must be remove before the listener is called and the component displayed.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>menuSeparator</name>
		<tag-class>org.rcfaces.core.internal.taglib.MenuSeparatorTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
A separator Menu item
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>menuRadioItem</name>
		<tag-class>org.rcfaces.core.internal.taglib.MenuRadioItemTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
A menu item with a radiobutton (see attribute GroupName)
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>expandedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to an image used for the expanded state.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>acceleratorKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the (composed) key used to execute an action from the keyboard.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>menuListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a menu is activated.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>removeAllWhenShown</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value specifying wether the content of the component must be remove before the listener is called and the component displayed.
]]></description>
		</attribute>
		<attribute>
			<name>radioValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the value associated with the group when this component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>groupName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the name of the virtual entity that links different components together.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>numberEntry</name>
		<tag-class>org.rcfaces.core.internal.taglib.NumberEntryTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<b>NOT COMPLETE</b>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>autoTab</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the focus should move automatically to the next element when the entry is completed.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>numberFormatType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the data type :
		<ul><li>
		number
		</li><li>
		integer
		</li><li>
		currency
		</li><li>
		percent
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>literalLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>autoCompletion</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
		</attribute>
		<attribute>
			<name>integerDigits</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value indicating the number of digits to show before the decimal separator.
]]></description>
		</attribute>
		<attribute>
			<name>fractionDigits</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value indicating the number of digits to show after the decimal separator.
]]></description>
		</attribute>
		<attribute>
			<name>numberFormat</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the format to use (compliant with java format).
]]></description>
		</attribute>
		<attribute>
			<name>integerStep</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the step used for the integer field when increasing/decreasing the value with the up/down arrows.
]]></description>
		</attribute>
		<attribute>
			<name>fractionStep</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Experimental Do not use.
]]></description>
		</attribute>
		<attribute>
			<name>number</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A number typed value.
]]></description>
		</attribute>
		<attribute>
			<name>minimum</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the lower limit for the value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>defaultNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
the default value.
]]></description>
		</attribute>
		<attribute>
			<name>maximum</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the upper limit for the value of the component.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>passwordEntry</name>
		<tag-class>org.rcfaces.core.internal.taglib.PasswordEntryTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The passwordEntry Component is based on the standard HTML tag &lt;INPUT TYPE="password"&gt; and is a <a href="/comps/textEntryComponent.html">textEntry Component</a>.</p>
      <p>The passwordEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>autoTab</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the focus should move automatically to the next element when the entry is completed.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>emptyMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string containing the message shown when there is no result.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>clientValidator</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A key identifying a validation process to apply to the component. this validation process can handle parameters. cf. the clientValidator doc.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>maxTextLength</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the maximum number of characters that the user can enter in the component.
]]></description>
		</attribute>
		<attribute>
			<name>columnNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value holding the width of the component in characters : x characters translates into y pixels width.
]]></description>
		</attribute>
		<attribute>
			<name>autoCompletion</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>progressBar</name>
		<tag-class>org.rcfaces.core.internal.taglib.ProgressBarTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The progressBar Component indicates the evolution of a task.</p>
      <p>The progressBar Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>minimum</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the lower limit for the value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>maximum</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the upper limit for the value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>indeterminate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the value is not determinated.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>progressIndicator</name>
		<tag-class>org.rcfaces.core.internal.taglib.ProgressIndicatorTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The progressIndicator Component indicates the evolution of a task. It uses the <a href="/comps/progressBarComponent.html">porgressBar Component</a> and add text information to it.</p>
      <p>The progressIndicator Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>indeterminate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the value is not determinated.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>suggestTextEntry</name>
		<tag-class>org.rcfaces.core.internal.taglib.SuggestTextEntryTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The suggestTextEntry is a <a href="/comps/textEntryCOmponent.html">textEntry Component</a> with an autosuggestion feature that shows in the form of a dropdown list.</p>
      <p>The suggestTextEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>autoTab</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the focus should move automatically to the next element when the entry is completed.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>emptyMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string containing the message shown when there is no result.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>clientValidator</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A key identifying a validation process to apply to the component. this validation process can handle parameters. cf. the clientValidator doc.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>maxTextLength</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the maximum number of characters that the user can enter in the component.
]]></description>
		</attribute>
		<attribute>
			<name>columnNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value holding the width of the component in characters : x characters translates into y pixels width.
]]></description>
		</attribute>
		<attribute>
			<name>autoCompletion</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>filterProperties</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that hold the filters to use on the server side. This property is often set via javascript code.
]]></description>
		</attribute>
		<attribute>
			<name>maxResultNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the maximum number of rows for the result.
]]></description>
		</attribute>
		<attribute>
			<name>suggestionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component receive an entry.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>menuListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a menu is activated.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>suggestionDelayMs</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the delay in milliseconds before showing the suggestion list.
]]></description>
		</attribute>
		<attribute>
			<name>suggestionMinChars</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the minimum number of characters before the suggestion is calculated.
]]></description>
		</attribute>
		<attribute>
			<name>caseSensitive</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the component should consider the case of the user input when using the data.
]]></description>
		</attribute>
		<attribute>
			<name>forceProposal</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the first proposed value must be automatically appended to the current entry.
]]></description>
		</attribute>
		<attribute>
			<name>suggestionValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value containing the value for the selected select item object.
]]></description>
		</attribute>
		<attribute>
			<name>suggestionConverter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying a converter id or a binding to a converter object. This converter will be used for the values of the list items.
]]></description>
		</attribute>
		<attribute>
			<name>moreResultsMessage</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>radioButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.RadioButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The radioButton Component is based on the standard HTML tag &lt;INPUT TYPE="radio"&gt;. It can interoperate automatically with other radioButtons from the same group.</p>
      <p>The radioButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>selected</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>radioValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the value associated with the group when this component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>groupName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the name of the virtual entity that links different components together.
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>resetButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.ResetButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The resetButton Component is based on the standard HTML tag &lt;INPUT TYPE="reset"&gt;. It is a <a href="/comps/buttonComponent.html">button Component</a>.</p>
      <p>The resetButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>ruler</name>
		<tag-class>org.rcfaces.core.internal.taglib.RulerTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The ruler Component is the &lt;HR&gt; HTML equivalent.</p>
      <p>It is used often when simple HTML is not desirable : for example if a part of a page is loaded via AJAX it might be easier to have only a jsf tree memory represantation.</p>
      <p>The ruler Component has the following capability :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Visibility</li>
        <li>Margin</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>orientation</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the orientation of the component :
		<ul><li>
		horizontal (default value)
		</li><li>
		vertical
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>alignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represents the alignement of the data in the component.
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>scope</name>
		<tag-class>org.rcfaces.core.internal.taglib.ScopeTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>scopeValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the binding associated to a variable representing a shortcut. (cf. scopeVar)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>scopeVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of a variable representing a shortcut to a binding. (cf. scopeValue)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>submitButton</name>
		<tag-class>org.rcfaces.core.internal.taglib.SubmitButtonTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The submitButton Component is based on the standard HTML tag &lt;INPUT TYPE="submit"&gt;. It is a <a href="/comps/buttonComponent.html">button Component</a>.</p>
      <p>The submitButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>spinner</name>
		<tag-class>org.rcfaces.core.internal.taglib.SpinnerTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The spinner Component is a <a href="/comps/textEntryComponent.html">textEntry Component</a> that accepts numbers and whose value can be incremented or decremented (by a parametrable step) with buttons or the keyboard arrows.</p>
      <p>The spinner Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>limits and step</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>autoTab</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the focus should move automatically to the next element when the entry is completed.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>emptyMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string containing the message shown when there is no result.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>clientValidator</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A key identifying a validation process to apply to the component. this validation process can handle parameters. cf. the clientValidator doc.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>maxTextLength</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the maximum number of characters that the user can enter in the component.
]]></description>
		</attribute>
		<attribute>
			<name>columnNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value holding the width of the component in characters : x characters translates into y pixels width.
]]></description>
		</attribute>
		<attribute>
			<name>autoCompletion</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>minimum</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the lower limit for the value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>maximum</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the upper limit for the value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>cycleValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether to start from the beginning when reaching the end or not. And vice versa.
]]></description>
		</attribute>
		<attribute>
			<name>step</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the step used when increasing/decreasing the value with the up/down arrows or buttons.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>styledMessage</name>
		<tag-class>org.rcfaces.core.internal.taglib.StyledMessageTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
An englobing tag that changes the style class surronuding a component when a particular message is emitted for a component.
		ex : 
		&lt;v:styledMessage errorStyleClass="formErreur" for="ef1"&gt;
			&lt;v:textEntry 
				id="ef1" 
				... /&gt;
		&lt;/v:styledMessage&gt;
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageHorizontalPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the horizontal positionning for the background image.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageHorizontalRepeat</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the background image should be repeated horizontally or not.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the background image.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageVerticalPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the vertical positionning for the background image.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundImageVerticalRepeat</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the background image should be repeated vertically or not.
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>showIfMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component should be shown when a message is fired.
]]></description>
		</attribute>
		<attribute>
			<name>setFocusIfMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component should be get the focus when a message is fired.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>styledText</name>
		<tag-class>org.rcfaces.core.internal.taglib.StyledTextTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The styledText Component is a placeholder for displaying "enhanced" text. It accepts any HTML tags. it's a <A href="/comps/textComponent.html">text Component</A></p>
      <p>The styledText Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; justification</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
		<attribute>
			<name>type</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the type of data (Java) to convert to or from.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>cardBox</name>
		<tag-class>org.rcfaces.core.internal.taglib.CardBoxTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The cardBox Component is similar to the <a href="/comps/tabbedPaneComponent.html">tabbedPane Component</a> without title and borders. It is usefull for showing alternatively different contents on the same page.</p>
      <p>The cardBox Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>asyncRenderMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the rendering mode for asynchronous capable component.
		<LI>
		<UL>
		If value is "none", the rendering is synchronous (made with the englobing page rendering).
		</UL>
		<UL>
		If value is "buffer", the rendering is calculated with the page and may contains HTML elements, it is sent to the client only when needed (asynchrponously).
		</UL>
		<UL>
		If value is "tree", the rendering is calculated only when needed (the HTML elements are ignored)
		</UL>
		</LI>
]]></description>
		</attribute>
		<attribute>
			<name>preference</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that holds the preferences for the component.
]]></description>
		</attribute>
		<attribute>
			<name>scopeValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the binding associated to a variable representing a shortcut. (cf. scopeVar)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>scopeVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of a variable representing a shortcut to a binding. (cf. scopeValue)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>card</name>
		<tag-class>org.rcfaces.core.internal.taglib.CardTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
An element belonging to a <a href="/comps/cardBoxComponent.html">cardBox Component</a> and holding the components.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>scopeValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the binding associated to a variable representing a shortcut. (cf. scopeVar)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>scopeVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of a variable representing a shortcut to a binding. (cf. scopeValue)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>loadListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is fully loaded (similar to init for AJAX).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>tabbedPane</name>
		<tag-class>org.rcfaces.core.internal.taglib.TabbedPaneTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The tabbedPane Component provides a way to show more information on a single page. It can download the data asynchronously via AJAX.</p>
      <p>The tabbedPane Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>asyncRenderMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the rendering mode for asynchronous capable component.
		<LI>
		<UL>
		If value is "none", the rendering is synchronous (made with the englobing page rendering).
		</UL>
		<UL>
		If value is "buffer", the rendering is calculated with the page and may contains HTML elements, it is sent to the client only when needed (asynchrponously).
		</UL>
		<UL>
		If value is "tree", the rendering is calculated only when needed (the HTML elements are ignored)
		</UL>
		</LI>
]]></description>
		</attribute>
		<attribute>
			<name>preference</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that holds the preferences for the component.
]]></description>
		</attribute>
		<attribute>
			<name>scopeValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the binding associated to a variable representing a shortcut. (cf. scopeVar)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>scopeVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of a variable representing a shortcut to a binding. (cf. scopeValue)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>closeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is closed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>closable</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Experimental : Do not use !
]]></description>
		</attribute>
		<attribute>
			<name>showValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>tab</name>
		<tag-class>org.rcfaces.core.internal.taglib.TabTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
An element belonging to a <a href="/comps/tabbedPaneComponent.html">tabbedPane Component</a> and holding the components.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>scopeValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the binding associated to a variable representing a shortcut. (cf. scopeVar)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>scopeVar</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the name of a variable representing a shortcut to a binding. (cf. scopeValue)
		ex: if scopeVar "bat" is associated to scopeValue "bean.attribute1.attribute2" then the use of "bat.attribute3" will be equivalente to "bean.attribute1.attribute2.attribute3"
]]></description>
		</attribute>
		<attribute>
			<name>loadListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is fully loaded (similar to init for AJAX).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>text</name>
		<tag-class>org.rcfaces.core.internal.taglib.TextTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The text Component is a placeholder for displaying text.</p>
      <p>The text Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; justification</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      	<li>Association with another component</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id that express the link between the two components.
]]></description>
		</attribute>
		<attribute>
			<name>type</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the type of data (Java) to convert to or from.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>textArea</name>
		<tag-class>org.rcfaces.core.internal.taglib.TextAreaTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The textAreaEntry Component is based on the standard HTML tag &lt;TEXTAREA&gt; and is a <a href="/comps/textEntryComponent.html">textEntry Component</a>.</p>
      <p>The textAreaEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>emptyMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string containing the message shown when there is no result.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>columnNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value holding the width of the component in characters : x characters translates into y pixels width.
]]></description>
		</attribute>
		<attribute>
			<name>rowNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the number of rows to be displayed.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>textEditor</name>
		<tag-class>org.rcfaces.core.internal.taglib.TextEditorTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>emptyMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string containing the message shown when there is no result.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>valueMimeType</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>textEntry</name>
		<tag-class>org.rcfaces.core.internal.taglib.TextEntryTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The textEntry Component is based on the standard HTML tag &lt;INPUT TYPE="text"&gt;.</p>
      <p>The textEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text &amp; font</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>autoTab</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the focus should move automatically to the next element when the entry is completed.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>textDirection</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>emptyMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string containing the message shown when there is no result.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>clientValidator</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A key identifying a validation process to apply to the component. this validation process can handle parameters. cf. the clientValidator doc.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>maxTextLength</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the maximum number of characters that the user can enter in the component.
]]></description>
		</attribute>
		<attribute>
			<name>columnNumber</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value holding the width of the component in characters : x characters translates into y pixels width.
]]></description>
		</attribute>
		<attribute>
			<name>autoCompletion</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
		</attribute>
		<attribute>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the url to activate on the server when the component is actionned through a key mapping on the faces config file.
]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the the component is activated by the user.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>timeEntry</name>
		<tag-class>org.rcfaces.core.internal.taglib.TimeEntryTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The timeEntry Component is a specialized <a href="/comps/textEntryComponent.html">textEntry Component</a>. it sports auto-completion related to the validity of the numbers entered as a time.</p>
      <p>The timeEntry Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; separators</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Calendar functions</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>autoTab</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the focus should move automatically to the next element when the entry is completed.
]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component's value is changed.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>literalLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>literalTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>errorStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for Error Messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fatalStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for fatal messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>infoStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for info messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>warnStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied for warning messages. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>autoCompletion</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating if the component should complete automaticaly the user entry.
]]></description>
		</attribute>
		<attribute>
			<name>time</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (time formatted) for the value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>minTime</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A time value indicating the minimum acceptable time for the component. The first accepted value is greater than minTime.
]]></description>
		</attribute>
		<attribute>
			<name>defaultTime</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The default value.
]]></description>
		</attribute>
		<attribute>
			<name>maxTime</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A time value indicating the maximum acceptable time for the component. The last accepted value is lesser than maxTime.
]]></description>
		</attribute>
		<attribute>
			<name>timeFormat</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string sepcifying the format to apply to the time value.
]]></description>
		</attribute>
		<attribute>
			<name>hourStep</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the step used for the hour field when increasing/decreasing the value with the up/down arrows.
]]></description>
		</attribute>
		<attribute>
			<name>minuteStep</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the step used for the minute field when increasing/decreasing the value with the up/down arrows.
]]></description>
		</attribute>
		<attribute>
			<name>secondStep</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the step used for the second field when increasing/decreasing the value with the up/down arrows.
]]></description>
		</attribute>
		<attribute>
			<name>millisStep</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the step used for the millisecond field when increasing/decreasing the value with the up/down arrows.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>toolBar</name>
		<tag-class>org.rcfaces.core.internal.taglib.ToolBarTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<b>EXPERIMENTAL</b>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>separatorImageURL</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>separatorImageWidth</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>separatorImageHeight</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>controlImageURL</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>controlImageWidth</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>controlImageHeight</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>itemPadding</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>toolFolder</name>
		<tag-class>org.rcfaces.core.internal.taglib.ToolFolderTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<b>EXPERIMENTAL</b>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>doubleClickListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is double-clicked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>itemsToolFolder</name>
		<tag-class>org.rcfaces.core.internal.taglib.ItemsToolFolderTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>doubleClickListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is double-clicked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is checked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkedValues</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A table of the values associated with checked nodes for the component. (Binding only)
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>verticalAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that represent the vertical alignement of the data in the component.
		<ul><li>
		top
		</li><li>
		center
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>showDropDownMark</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>itemHiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>toolItem</name>
		<tag-class>org.rcfaces.core.internal.taglib.ToolItemTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<b>EXPERIMENTAL</b>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>groupName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the name of the virtual entity that links different components together.
]]></description>
		</attribute>
		<attribute>
			<name>inputType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Experimental:		A string value specifying the type of input to show radio button or check box.
]]></description>
		</attribute>
		<attribute>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>borderType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the type of border the component should show.
		Check for availability for a particular component.
]]></description>
		</attribute>
		<attribute>
			<name>textPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		top
		</li><li>
		bottom
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>toolItemSeparator</name>
		<tag-class>org.rcfaces.core.internal.taglib.ToolItemSeparatorTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<b>EXPERIMENTAL</b>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>tree</name>
		<tag-class>org.rcfaces.core.internal.taglib.TreeTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The tree Component shows informations in an arborescent view. 
      It can be compared to the tree found in most modern file explorer. 
      It allows contextual menus ...</p>
      <p>The tree Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; images</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      	<li>Contextual actions in node or tree scope</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding the current value of the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
		</attribute>
		<attribute>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
		</attribute>
		<attribute>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
		</attribute>
		<attribute>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
		</attribute>
		<attribute>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
		</attribute>
		<attribute>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
		</attribute>
		<attribute>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
		</attribute>
		<attribute>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
		</attribute>
		<attribute>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
		</attribute>
		<attribute>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
		</attribute>
		<attribute>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
		</attribute>
		<attribute>
			<name>textAlignment</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the alignement for the text in the component :
		<ul><li>
		left
		</li><li>
		right
		</li><li>
		center
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
		</attribute>
		<attribute>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
		</attribute>
		<attribute>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
		</attribute>
		<attribute>
			<name>doubleClickListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is double-clicked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that the user is required to provide a submitted
          value for this input component.
]]></description>
		</attribute>
		<attribute>
			<name>horizontalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the horizontal scroolbar.
]]></description>
		</attribute>
		<attribute>
			<name>verticalScrollPosition</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the position of the vertical scroolbar (Browser dependant).
]]></description>
		</attribute>
		<attribute>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates if the component should show a border or not.
]]></description>
		</attribute>
		<attribute>
			<name>readOnly</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
]]></description>
		</attribute>
		<attribute>
			<name>showValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>checkable</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indcating wether the component can be checked. cf. checkCardinality.
]]></description>
		</attribute>
		<attribute>
			<name>checkCardinality</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string indicating the cardinality (number of check allowed) for this componenent.
]]></description>
		</attribute>
		<attribute>
			<name>checkListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is checked.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>checkedValues</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A table of the values associated with checked nodes for the component. (Binding only)
]]></description>
		</attribute>
		<attribute>
			<name>selectable</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the component can receive a user's selection
]]></description>
		</attribute>
		<attribute>
			<name>selectionCardinality</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the type of multiple selection authorized:
		<ul><li>
		zeromany|*: any number of selections or none
		</li><li>
		one|1: one and only one selection
		</li><li>
		onemany|+: one or more selection
		</li><li>
		optionnal|?: none or one selection
		</li></ul>
]]></description>
		</attribute>
		<attribute>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>selectedValues</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A table of the values associated with selected nodes for the component. (Binding only)
]]></description>
		</attribute>
		<attribute>
			<name>preloadedLevelDepth</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An int value specifying the number of levels that should be preloaded when a node is displayed.
]]></description>
		</attribute>
		<attribute>
			<name>expandable</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>expandedValues</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>defaultImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image.
]]></description>
		</attribute>
		<attribute>
			<name>defaultSelectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image for the selected state.
]]></description>
		</attribute>
		<attribute>
			<name>defaultExpandedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image for an expanded node.
]]></description>
		</attribute>
		<attribute>
			<name>defaultDisabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>defaultLeafImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image for a leaf.
]]></description>
		</attribute>
		<attribute>
			<name>defaultSelectedLeafImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image for the selected leaf.
]]></description>
		</attribute>
		<attribute>
			<name>defaultExpandedLeafImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image for an expanded leaf.
]]></description>
		</attribute>
		<attribute>
			<name>defaultDisabledLeafImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the default image for a disabled leaf.
]]></description>
		</attribute>
		<attribute>
			<name>hideRootExpandSign</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the expand sign should be visible for the topmost node.
]]></description>
		</attribute>
		<attribute>
			<name>cursorValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>expansionUseValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that indicates wether a node is identified by it's value or by a complete path.
]]></description>
		</attribute>
		<attribute>
			<name>clientSelectionFullState</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the client should know about the component's full state even if only a part of the data is present (AJAX).
]]></description>
		</attribute>
		<attribute>
			<name>clientCheckFullState</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the client should know about the component's full state even if only a part of the data is present (AJAX).
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>treeNode</name>
		<tag-class>org.rcfaces.core.internal.taglib.TreeNodeTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
A node belonging to a tree.
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
		</attribute>
		<attribute>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
		</attribute>
		<attribute>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
		</attribute>
		<attribute>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value describing the item.
]]></description>
		</attribute>
		<attribute>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
		</attribute>
		<attribute>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
		</attribute>
		<attribute>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string value specifying the text (literal or binding) to be shown.
]]></description>
		</attribute>
		<attribute>
			<name>expandedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to an image used for the expanded state.
]]></description>
		</attribute>
		<attribute>
			<name>disabledImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used for the disabled state.
]]></description>
		</attribute>
		<attribute>
			<name>hoverImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used chen the pointer hover the component.
]]></description>
		</attribute>
		<attribute>
			<name>selectedImageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used when the component is selected.
]]></description>
		</attribute>
		<attribute>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
		</attribute>
		<attribute>
			<name>groupName</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A string specifying the name of the virtual entity that links different components together.
]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
		</attribute>
		<attribute>
			<name>menuPopupId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>inputType</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Experimental:		A string value specifying the type of input to show radio button or check box.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>focusManager</name>
		<tag-class>org.rcfaces.core.internal.taglib.FocusManagerTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The focusManager Component is a non-visual component.</p>
      <p>It allows to deal with the focus on the current page.</p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>focusId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A component's id. This component will get the focus.
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>service</name>
		<tag-class>org.rcfaces.core.internal.taglib.ServiceTag</tag-class>
		<body-content>JSP</body-content>
<description><![CDATA[
<p>The service Component is a non-visual component.</p>
      <p>It allows to (synchronously or asynchronously) call AJAX services from the client.</p>
      <p>The service Component has the following capability :
      <ul>
        <li>Property changed Event handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
		</attribute>
		<attribute>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>serviceEventListener</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
Executed when the component is called (javascript).
		A string that represent a server action to execute.
		The server action is represented by a binding.
]]></description>
		</attribute>
		<attribute>
			<name>filterProperties</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
A binded object that hold the filters to use on the server side. This property is often set via javascript code.
]]></description>
		</attribute>
		<attribute>
			<name>componentLocale</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>componentTimeZone</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>serviceId</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
An id for the service.
]]></description>
		</attribute>
		<attribute>
			<name>enableViewState</name>
			<rtexprvalue>true</rtexprvalue>
<description><![CDATA[
TODO
]]></description>
		</attribute>
	</tag>
	<tag>
		<name>selectionListener</name>
		<tag-class>org.rcfaces.core.internal.taglib.SelectionListenerTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>type</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<name>validationParameter</name>
		<tag-class>org.rcfaces.core.internal.taglib.ValidationParameterTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>value</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>clientSide</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>serverData</name>
		<tag-class>org.rcfaces.core.internal.taglib.ServerDataTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>value</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>checkListener</name>
		<tag-class>org.rcfaces.core.internal.taglib.CheckListenerTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>type</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<name>doubleClickListener</name>
		<tag-class>org.rcfaces.core.internal.taglib.DoubleClickListenerTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>type</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<name>propertyChangeListener</name>
		<tag-class>org.rcfaces.core.internal.taglib.PropertyChangeListenerTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>type</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<name>userEventListener</name>
		<tag-class>org.rcfaces.core.internal.taglib.UserEventListenerTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>type</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<name>errorListener</name>
		<tag-class>org.rcfaces.core.internal.taglib.ErrorListenerTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>type</name>
			<required>true</required>
		</attribute>
	</tag>
	<tag>
		<name>clientData</name>
		<tag-class>org.rcfaces.core.internal.taglib.ClientDataTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>value</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
  <tag>
<name>convertByte</name>
<tag-class>org.rcfaces.core.internal.taglib.ConvertByteTag</tag-class>
<body-content>empty</body-content>
<description>Register a ByteConverter instance on the UIComponent associated 
      with the closest parent UIComponent custom action.</description>
<attribute>
      <name>currencyCode</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        ISO 4217 currency code, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>currencySymbol</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Currency symbol, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>groupingUsed</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag specifying whether formatted output will contain grouping separators.  Expressions must  evaluate to a boolean.  Default value is true. 
      </description>
    </attribute>
<attribute>
      <name>locale</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Locale whose predefined styles for numbers are used during formatting and parsing.  If not specified, the Locale returned by  FacesContext.getViewRoot().getLocale() will be used.  Expressions must evaluate to a java.util.Locale. 
      </description>
    </attribute>
<attribute>
      <name>maxIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Maximum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>minIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Minimum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>pattern</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Custom formatting pattern which determins how the number string should be formatted and parsed. 
      </description>
    </attribute>
<attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies how the number string will be formatted and parsed.  Valid values are "number", "currency", and "percentage".  Default value is "number". 
      </description>
    </attribute>
<attribute>
      <name>defaultValue</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies the default value if the string is null or empty.</description>
    </attribute>
</tag>
  <tag>
<name>convertShort</name>
<tag-class>org.rcfaces.core.internal.taglib.ConvertShortTag</tag-class>
<body-content>empty</body-content>
<description>Register a ShortConverter instance on the UIComponent associated 
      with the closest parent UIComponent custom action.</description>
<attribute>
      <name>currencyCode</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        ISO 4217 currency code, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>currencySymbol</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Currency symbol, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>groupingUsed</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag specifying whether formatted output will contain grouping separators.  Expressions must  evaluate to a boolean.  Default value is true. 
      </description>
    </attribute>
<attribute>
      <name>locale</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Locale whose predefined styles for numbers are used during formatting and parsing.  If not specified, the Locale returned by  FacesContext.getViewRoot().getLocale() will be used.  Expressions must evaluate to a java.util.Locale. 
      </description>
    </attribute>
<attribute>
      <name>maxIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Maximum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>minIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Minimum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>pattern</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Custom formatting pattern which determins how the number string should be formatted and parsed. 
      </description>
    </attribute>
<attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies how the number string will be formatted and parsed.  Valid values are "number", "currency", and "percentage".  Default value is "number". 
      </description>
    </attribute>
<attribute>
      <name>defaultValue</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies the default value if the string is null or empty.</description>
    </attribute>
</tag>
  <tag>
<name>convertInteger</name>
<tag-class>org.rcfaces.core.internal.taglib.ConvertIntegerTag</tag-class>
<body-content>empty</body-content>
<description>Register a IntegerConverter instance on the UIComponent associated 
      with the closest parent UIComponent custom action.</description>
<attribute>
      <name>currencyCode</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        ISO 4217 currency code, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>currencySymbol</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Currency symbol, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>groupingUsed</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag specifying whether formatted output will contain grouping separators.  Expressions must  evaluate to a boolean.  Default value is true. 
      </description>
    </attribute>
<attribute>
      <name>locale</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Locale whose predefined styles for numbers are used during formatting and parsing.  If not specified, the Locale returned by  FacesContext.getViewRoot().getLocale() will be used.  Expressions must evaluate to a java.util.Locale. 
      </description>
    </attribute>
<attribute>
      <name>maxIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Maximum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>minIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Minimum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>pattern</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Custom formatting pattern which determins how the number string should be formatted and parsed. 
      </description>
    </attribute>
<attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies how the number string will be formatted and parsed.  Valid values are "number", "currency", and "percentage".  Default value is "number". 
      </description>
    </attribute>
<attribute>
      <name>defaultValue</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies the default value if the string is null or empty.</description>
    </attribute>
</tag>
  <tag>
<name>convertLong</name>
<tag-class>org.rcfaces.core.internal.taglib.ConvertLongTag</tag-class>
<body-content>empty</body-content>
<description>Register a LongConverter instance on the UIComponent associated 
      with the closest parent UIComponent custom action.</description>
<attribute>
      <name>currencyCode</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        ISO 4217 currency code, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>currencySymbol</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Currency symbol, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>groupingUsed</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag specifying whether formatted output will contain grouping separators.  Expressions must  evaluate to a boolean.  Default value is true. 
      </description>
    </attribute>
<attribute>
      <name>locale</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Locale whose predefined styles for numbers are used during formatting and parsing.  If not specified, the Locale returned by  FacesContext.getViewRoot().getLocale() will be used.  Expressions must evaluate to a java.util.Locale. 
      </description>
    </attribute>
<attribute>
      <name>maxIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Maximum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>minIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Minimum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>pattern</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Custom formatting pattern which determins how the number string should be formatted and parsed. 
      </description>
    </attribute>
<attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies how the number string will be formatted and parsed.  Valid values are "number", "currency", and "percentage".  Default value is "number". 
      </description>
    </attribute>
<attribute>
      <name>defaultValue</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies the default value if the string is null or empty.</description>
    </attribute>
</tag>
  <tag>
<name>convertFloat</name>
<tag-class>org.rcfaces.core.internal.taglib.ConvertFloatTag</tag-class>
<body-content>empty</body-content>
<description>Register a FloatConverter instance on the UIComponent associated 
      with the closest parent UIComponent custom action.</description>
<attribute>
      <name>currencyCode</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        ISO 4217 currency code, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>currencySymbol</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Currency symbol, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>groupingUsed</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag specifying whether formatted output will contain grouping separators.  Expressions must  evaluate to a boolean.  Default value is true. 
      </description>
    </attribute>
<attribute>
      <name>locale</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Locale whose predefined styles for numbers are used during formatting and parsing.  If not specified, the Locale returned by  FacesContext.getViewRoot().getLocale() will be used.  Expressions must evaluate to a java.util.Locale. 
      </description>
    </attribute>
<attribute>
      <name>integerOnly</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag specifying whether only the integer part of the value will be formatted and parsed. Expressions must evaluate to a boolean. 
        Default value is false. 
      </description>
    </attribute>
<attribute>
      <name>maxFractionDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Maximum number of digits that will be formatted in the fractional portion of the output.  Expressions  must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>minFractionDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Minimum number of digits that will be formatted in the fractional portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>maxIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Maximum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>minIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Minimum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>pattern</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Custom formatting pattern which determins how the number string should be formatted and parsed. 
      </description>
    </attribute>
<attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies how the number string will be formatted and parsed.  Valid values are "number", "currency", and "percentage".  Default value is "number". 
      </description>
    </attribute>
<attribute>
      <name>defaultValue</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies the default value if the string is null or empty.</description>
    </attribute>
</tag>
  <tag>
<name>convertDouble</name>
<tag-class>org.rcfaces.core.internal.taglib.ConvertDoubleTag</tag-class>
<body-content>empty</body-content>
<description>Register a DoubleConverter instance on the UIComponent associated 
      with the closest parent UIComponent custom action.</description>
<attribute>
      <name>currencyCode</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        ISO 4217 currency code, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>currencySymbol</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Currency symbol, applied only when formatting currencies. 
      </description>
    </attribute>
<attribute>
      <name>groupingUsed</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag specifying whether formatted output will contain grouping separators.  Expressions must  evaluate to a boolean.  Default value is true. 
      </description>
    </attribute>
<attribute>
      <name>locale</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Locale whose predefined styles for numbers are used during formatting and parsing.  If not specified, the Locale returned by  FacesContext.getViewRoot().getLocale() will be used.  Expressions must evaluate to a java.util.Locale. 
      </description>
    </attribute>
<attribute>
      <name>integerOnly</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag specifying whether only the integer part of the value will be formatted and parsed. Expressions must evaluate to a boolean. 
        Default value is false. 
      </description>
    </attribute>
<attribute>
      <name>maxFractionDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Maximum number of digits that will be formatted in the fractional portion of the output.  Expressions  must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>minFractionDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Minimum number of digits that will be formatted in the fractional portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>maxIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Maximum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>minIntegerDigits</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Minimum number of digits that will be formatted in the integer portion of the output.  Expressions must evaluate to an int. 
      </description>
    </attribute>
<attribute>
      <name>pattern</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Custom formatting pattern which determins how the number string should be formatted and parsed. 
      </description>
    </attribute>
<attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies how the number string will be formatted and parsed.  Valid values are "number", "currency", and "percentage".  Default value is "number". 
      </description>
    </attribute>
<attribute>
      <name>defaultValue</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies the default value if the string is null or empty.</description>
    </attribute>
</tag>
</taglib>
