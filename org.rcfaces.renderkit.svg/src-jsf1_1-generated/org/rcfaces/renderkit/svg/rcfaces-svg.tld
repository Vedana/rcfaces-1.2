<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN" "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib>
	<tlib-version>1.0</tlib-version>
	<jsp-version>1.2</jsp-version>
	<short-name>svg</short-name>
	<uri>http://rcfaces.org/svg</uri>
	<tag>
		<name>image</name>
		<tag-class>org.rcfaces.renderkit.svg.internal.taglib.ImageTag</tag-class>
		<tei-class>org.rcfaces.core.internal.taglib.CameliaTagExtraInfo</tei-class>
		<body-content>JSP</body-content>
		<description><![CDATA[
<p>The image Component shows an image (it's equivalent to &lt;img .../&gt;).</p>
      <p>The image Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Image</li>
        <li>Margin</li>
        <li>Help</li>
        <li>Visibility</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
			<rtexprvalue>false</rtexprvalue>
			<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<rtexprvalue>false</rtexprvalue>
			<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value holding the current value of the component.
]]></description>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value holding the current value of the component.
]]></description>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>alternateText</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A binded object that hold the filters to use on the server side. This property is often set via javascript code.
]]></description>
			<name>filterProperties</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>pixelUnitToMillimeter</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>curveFlatness</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>distanceTolerance</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>imageButton</name>
		<tag-class>org.rcfaces.renderkit.svg.internal.taglib.ImageButtonTag</tag-class>
		<tei-class>org.rcfaces.core.internal.taglib.CameliaTagExtraInfo</tei-class>
		<body-content>JSP</body-content>
		<description><![CDATA[
<p>The imageButton Component is a <a href="/comps/buttonComponent.html">button Component</a> that can show an image.</p>
      <p>The imageButton Component has the following capabilities :
      <ul>
        <li>Position &amp; Size</li>
        <li>Foreground &amp; Background Color</li>
        <li>Text, font &amp; image</li>
        <li>Margin &amp; border</li>
        <li>Help</li>
        <li>Visibility, Read-Only, Disabled</li>
      	<li>Events Handling</li>
      </ul>
      </p>
]]></description>
		<attribute>
			<name>id</name>
			<rtexprvalue>false</rtexprvalue>
			<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<rtexprvalue>false</rtexprvalue>
			<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value holding the current value of the component.
]]></description>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
The converter id to use. as specified in faces-config.xml.
]]></description>
			<name>converter</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the composant is visible.
]]></description>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value (as specified by CSS) for the width of the component.
]]></description>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value (as specified by CSS) for the height of the component.
]]></description>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the message to be shown by a <a href="/comps/helpMessageZoneComponent.html">helpMessageZone Component</a>.
]]></description>
			<name>helpMessage</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An URL that points to a help page for the component. it is used for example by a <a href="/comps/helpButtonComponent.html">helpButton Component</a>.
]]></description>
			<name>helpURL</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the tooltip for the component (shown when the pointe hover the component).
]]></description>
			<name>toolTipText</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the pointer leaves the area of the component.
		A string that represent a javascript expression to evaluate.
]]></description>
			<name>mouseOutListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the pointer hover the component's area.
		A string that represent a javascript expression to evaluate.
]]></description>
			<name>mouseOverListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>valueLocked</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the choosen look of the component.
]]></description>
			<name>lookId</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
			<name>x</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value (as specified by CSS) for the x position of the component.
]]></description>
			<name>y</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>errorListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margin size for the component's bottom (compliant to CSS margin-bottom).
]]></description>
			<name>marginBottom</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margin size for the component's left (compliant to CSS margin-left).
]]></description>
			<name>marginLeft</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margin size for the component's right (compliant to CSS margin-right).
]]></description>
			<name>marginRight</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margin size for the component's top (compliant to CSS margin-top).
]]></description>
			<name>marginTop</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A color value (as specified by CSS) for the background.
]]></description>
			<name>backgroundColor</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A color value (as specified by CSS) for the text.
]]></description>
			<name>foregroundColor</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A space-separated list of CSS style class(es) to be applied to the component. This value will be passed through as the "class" attribute on generated markup.
]]></description>
			<name>styleClass</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the component is called.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>userEventListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the management of invisible state on the client.
		Authorized values are :
		<ul><li>
		server : if not visible, nothing is sent to the client
		</li><li>
		phantom : if not visible, the data is sent to the client and the page estate is reserved for a futur eventual display of the component
		</li><li>
		ignore : if not visible, the data is sent to the client but no page estate is reserved
		</li></ul>
]]></description>
			<name>hiddenMode</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>waiRole</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when a component's property is changed (by javascript).
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>propertyChangeListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the component is intialized.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>initListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the margins for the component (compliant to CSS margin).
]]></description>
			<name>margins</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value holding the current value of the component.
]]></description>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An url string pointing to the image used by the component.
]]></description>
			<name>imageURL</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the height (in pixels) to use for the image shown.
]]></description>
			<name>imageHeight</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the width (in pixels) to use for the image shown.
]]></description>
			<name>imageWidth</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>alternateText</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating the <i>bold</i> property for the specified font.
]]></description>
			<name>fontBold</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating the <i>italic</i> property for the specified font.
]]></description>
			<name>fontItalic</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value indicating the name of the font used for this component.
]]></description>
			<name>fontName</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating the <i>underline</i> property for the specified font.
]]></description>
			<name>fontUnderline</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A binded object that hold the filters to use on the server side. This property is often set via javascript code.
]]></description>
			<name>filterProperties</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>pixelUnitToMillimeter</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>curveFlatness</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>distanceTolerance</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value that represents the disabled state of the component.
]]></description>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the focus quits the component.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>blurListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the component gets the focus.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>focusListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the component detects a key pressed event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>keyPressListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the component detects a key down event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>keyDownListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the component detects a key up event.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>keyUpListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value holding a comma separated list of the client modifiable properties.
]]></description>
			<name>unlockedClientAttributeNames</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>validationListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
Executed when the component is selected.
		A string that represent a javascript expression to evaluate and eventually a server action to execute.
		the two parts are separated by a semi-column.
		If the javascript evaluation return false (by using the return keyword) the server action is not executed.
		The server action is represented by a binding.
]]></description>
			<name>selectionListener</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A space-separated list of CSS style classes to be applied when this component get the focus. This value will be passed through as the "class" attribute on generated markup.
]]></description>
			<name>focusStyleClass</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
]]></description>
			<name>immediate</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>group</name>
		<tag-class>org.rcfaces.renderkit.svg.internal.taglib.GroupTag</tag-class>
		<tei-class>org.rcfaces.core.internal.taglib.CameliaTagExtraInfo</tei-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<rtexprvalue>false</rtexprvalue>
			<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<rtexprvalue>false</rtexprvalue>
			<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value describing the item.
]]></description>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>alternateText</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the component can receive a user's selection
]]></description>
			<name>selectable</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value describing the item.
]]></description>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>targetId</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
	<tag>
		<name>path</name>
		<tag-class>org.rcfaces.renderkit.svg.internal.taglib.PathTag</tag-class>
		<tei-class>org.rcfaces.core.internal.taglib.CameliaTagExtraInfo</tei-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<rtexprvalue>false</rtexprvalue>
			<description><![CDATA[
A string specifying the identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<rtexprvalue>false</rtexprvalue>
			<description><![CDATA[
The value binding expression linking this component to a property in a backing bean.
]]></description>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value describing the item.
]]></description>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>alternateText</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string that indicates the alphanumeric key used to execute an action from the keyboard (in conjunction with a alteration key ex : Alt).
]]></description>
			<name>accessKey</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
An int value specifying the position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
]]></description>
			<name>tabIndex</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
]]></description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating wether the component can receive a user's selection
]]></description>
			<name>selectable</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value to be returned to the server if this
        option is selected by the user.
]]></description>
			<name>itemValue</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value specifying the label to be displayed to the user
        for this option.
]]></description>
			<name>itemLabel</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string value describing the item.
]]></description>
			<name>itemDescription</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A boolean value indicating whether the option created
        by this component is disabled.  Expressions
        must evaluate to a boolean.  Default value
        is false.
]]></description>
			<name>itemDisabled</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>targetId</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>clip</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>clipPath</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>clipRule</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>color</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>display</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fill</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fillRule</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fillOpacity</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontFamily</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<description><![CDATA[
A string indicating the size to use for the selected font. (or any other CSS accepted value for font size).
		<br/>
		values [xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|<i>length</i> for example 10px|<i>%</i>]
]]></description>
			<name>fontSize</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontSizeAdjust</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontStretch</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontStyle</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontVariant</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>fontWeight</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>opacity</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>overflow</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>stopColor</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>stopOpacity</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>stroke</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>strokeDashArray</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>strokeDashOffset</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>strokeLineCap</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>strokeLineJoin</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>strokeMiterLimit</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>strokeOpacity</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>strokeWidth</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textAlign</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textAnchor</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textDecoration</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>textRendering</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>visibility</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>wordSpacing</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
		<attribute>
			<name>writingMode</name>
			<rtexprvalue>true</rtexprvalue>
		</attribute>
	</tag>
</taglib>
