var _n={DEFAULT:0,FATAL:0,ERROR:3,WARN:4,INFO:6,DEBUG:7,TRACE:9,Initializer:function(){var e=window.f_logCB
if(!e)return
f_log.au({f_doAppend:e})},Finalizer:function(){var e
f_log.O=f_log.x=e},GetLog:function(e){var u=f_log,o=f_core,t=u._d_,n,r,f,i,a
if(!t){t={}
u._d_=t}n=t[e]
if(n)return n
r=0
if(o&&o.ff)r=7
f=u.O
if(f){for(a in f){if(a.length>0&&e.indexOf(a)!=0)continue
if(i&&i.length>a)continue
i=a
r=f[a]}}n=u.f_newInstance(e,r)
t[e]=n
return n},p_:function(){var i=f_log,f=arguments,e=i.O,t,n,r
if(!e){e={}
i.O=e}for(t=0;t<f.length;){n=f[t++]
r=f[t++]
e[n]=r}},S:function(e){var a,i=window,t=f_log.x,n,r
if(!t||!t.length)return!1
try{i._cf=!0
for(n=0;n<t.length;n++){r=t[n]
if(typeof(r.f_doAppend)!="function")continue
try{r.f_doAppend(e)}catch(f){alert("Append log event exception:\n"+f)}}}finally{i._cf=a}return!0},au:function(){var t=f_log,e=t.x
if(!e){e=[]
t.x=e}f_core.ti(e,arguments)}}
var _e={f_log:function(e,t){var n=this
n.f_super(arguments)
if(typeof(t)!="number")t=3
n._rr=t
n._I=e},f_fatal:function(e,t,n){return this._2a(0,e,t,n)},f_error:function(e,t,n){return this._2a(3,e,t,n)},f_warn:function(e,t,n){return this._2a(4,e,t,n)},f_info:function(e,t,n){return this._2a(6,e,t,n)},f_debug:function(e,t,n){return this._2a(7,e,t,n)},f_trace:function(e,t,n){return this._2a(9,e,t,n)},_2a:function(e,t,n,r){if(!r)r=window
if(this._rr<e)return!1
var f={name:this._I,level:e,message:t,exception:n,window:r,date:new Date()}
return f_log.S(f)},f_isFatalEnabled:function(){return(this._rr>=0)},f_isErrorEnabled:function(){return(this._rr>=3)},f_isWarnEnabled:function(){return(this._rr>=4)},f_isInfoEnabled:function(){return(this._rr>=6)},f_isDebugEnabled:function(){return(this._rr>=7)},f_isTraceEnabled:function(){return(this._rr>=9)}}
var f_log=new f_class("f_log",null,_n,_e);